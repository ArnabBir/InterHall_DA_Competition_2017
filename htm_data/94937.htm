<!DOCTYPE html>
<html lang="en">
	<head>
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>ZIP Code 94937 Map, Housing Stats, More for Inverness, CA</title>
	<meta name="description" content="Interactive and printable 94937 ZIP code maps, population demographics, Inverness CA real estate costs, rental prices, and home values.">

	<link rel="stylesheet" href="/automin/d8c0ee6cb173812108ee72a43aea775d4ab7eac5.automin.cache_extend.1483653703.css" type="text/css">

	<!-- Responsive Ad code here since it isn't supported in external stylesheets -->
	<style type="text/css">

		.banner-ad-unit {
			height:250px;
			width: 300px;
		}

		.banner-ad-container {
			text-align: center;
			margin: 15px 0;
		}

		/* sm */
		@media(min-width:768px){

			.banner-ad-unit {
				height:60px;
				width:468px;
			}
		}

		/* md */
		@media(min-width:992px){

		}

		/* lg */
		@media(min-width:1200px){

			.banner-ad-unit {
				height:90px;
				width:728px;
			}
		}

	</style>

	
		<script type="text/javascript" src="http://maps.google.com/maps/api/js?key=AIzaSyA11LGixNdjBOJIKIgJM51_8JL11Ow7NXw&sensor=false&libraries=places"></script>
		<style>
					.D3ChartOuterContainer {
						max-width: 1200px;
					}
					.D3ChartContainer {
						position: relative;
						width: 100%;
						margin: 0 auto;
						padding-bottom: 70%;
						height: 0;
					}
					@media(min-width:768px){
						.D3ChartContainer {
							padding-bottom: 40%;
						}
					}
					.D3SizingContainer {
						position: absolute; 
						left: 0; 
						width: 100%; 
						height: 100%;
					}
			
					.D3ChartContainer SVG {
						width: 100%;
						height: 100%;
					}
				</style>
<link href="//cdnjs.cloudflare.com/ajax/libs/nvd3/1.8.1/nv.d3.min.css" rel="stylesheet" crossorigin="anonymous"/>
<style>
					.NVD3ChartIcon {
						font-family: FontAwesome;
						font-size: 18px;
						fill: #CCCCCC;
						visibility: hidden;
					}
					.NVD3ChartIcon:HOVER {
						fill: #000000;
						cursor: pointer;
					}
					
					@media(min-width:768px){
						.NVD3ChartIcon {
							visibility: visible;
						}
					}
						
					.NVD3ChartFooter {
						font-size: 11px;
						font-family: "Helvetica Neue",Helvetica,Arial,sans-serif;
					}
					
					.NVD3ChartFooter A {
						text-decoration: underline;	
					}
				</style><script> 
				geojson = {"type":"FeatureCollection","features":[{"type":"Feature","properties":{"fillOpacity":0,"strokeColor":"#FF0000","strokeOpacity":0.5},"geometry":{"type":"MultiPolygon","coordinates":[[[[-123.013933,37.994052],[-123.014047,37.993951],[-123.014158,37.993924],[-123.014276,37.993929],[-123.014533,37.993973],[-123.014783,37.993902],[-123.014998,37.993908],[-123.01529,37.994023],[-123.015637,37.994111],[-123.01581,37.994194],[-123.016088,37.994265],[-123.016303,37.994243],[-123.016657,37.994117],[-123.01688,37.994079],[-123.016956,37.994123],[-123.017143,37.994299],[-123.017275,37.99448],[-123.017377,37.994545],[-123.0174,37.994546],[-123.017428,37.994518],[-123.017379,37.994282],[-123.017379,37.994189],[-123.017442,37.994139],[-123.017629,37.994057],[-123.017692,37.994051],[-123.017865,37.994216],[-123.018074,37.994255],[-123.01823,37.994306],[-123.01824,37.99431],[-123.018469,37.994304],[-123.018587,37.994327],[-123.018684,37.994354],[-123.018921,37.994481],[-123.018962,37.99453],[-123.018927,37.994827],[-123.019163,37.994937],[-123.019316,37.994964],[-123.019594,37.994964],[-123.019934,37.995063],[-123.020239,37.99503],[-123.020399,37.995036],[-123.020552,37.995074],[-123.02076,37.995173],[-123.020878,37.995196],[-123.021121,37.995179],[-123.021426,37.995097],[-123.02151,37.995047],[-123.021503,37.994943],[-123.021635,37.994899],[-123.021774,37.994899],[-123.021933,37.994987],[-123.022058,37.995031],[-123.022364,37.995031],[-123.022593,37.995064],[-123.022676,37.994954],[-123.022663,37.994751],[-123.022697,37.994724],[-123.022808,37.994691],[-123.022871,37.99463],[-123.02301,37.994608],[-123.023197,37.994702],[-123.023405,37.994746],[-123.023593,37.994817],[-123.023739,37.994812],[-123.023836,37.994779],[-123.023919,37.99479],[-123.023961,37.994845],[-123.024009,37.995026],[-123.02419,37.995164],[-123.024169,37.995488],[-123.024127,37.99562],[-123.024009,37.995872],[-123.023689,37.996383],[-123.023578,37.99646],[-123.023141,37.996652],[-123.023009,37.996784],[-123.022731,37.997191],[-123.022494,37.997421],[-123.022342,37.997515],[-123.022356,37.997553],[-123.022453,37.997614],[-123.022446,37.997701],[-123.022279,37.997866],[-123.022196,37.997987],[-123.022043,37.99813],[-123.021904,37.998207],[-123.021834,37.998212],[-123.021682,37.998141],[-123.021619,37.998146],[-123.021591,37.998174],[-123.021445,37.998459],[-123.021313,37.998597],[-123.021313,37.998624],[-123.021334,37.998635],[-123.021536,37.998619],[-123.021556,37.998635],[-123.021563,37.998668],[-123.021362,37.998811],[-123.021105,37.998954],[-123.021021,37.999042],[-123.020903,37.999448],[-123.020855,37.999547],[-123.020736,37.999668],[-123.020486,37.999844],[-123.020424,37.999833],[-123.020396,37.999761],[-123.020368,37.999739],[-123.02032,37.999734],[-123.020174,37.999772],[-123.020049,37.999871],[-123.020028,37.999882],[-123.019993,37.999882],[-123.019958,37.999858],[-123.019938,37.999849],[-123.019806,37.999717],[-123.019394,37.999603],[-123.019188,37.999546],[-123.019042,37.999546],[-123.018883,37.999623],[-123.018744,37.999618],[-123.018209,37.999354],[-123.017841,37.999211],[-123.017737,37.999084],[-123.017585,37.998985],[-123.017404,37.998777],[-123.017321,37.998754],[-123.017175,37.998771],[-123.016876,37.998864],[-123.01655,37.998903],[-123.016383,37.99899],[-123.016168,37.999007],[-123.016106,37.999034],[-123.016078,37.999386],[-123.01623,37.999518],[-123.016258,37.999551],[-123.016258,37.999628],[-123.016223,37.999655],[-123.016085,37.999655],[-123.015987,37.999677],[-123.015911,37.999831],[-123.015779,37.999809],[-123.015696,37.999825],[-123.015605,37.999902],[-123.015577,37.999927],[-123.013592,37.999928],[-123.013731,37.997349],[-123.013616,37.997401],[-123.013232,37.997595],[-123.012583,37.997856],[-123.012373,37.997917],[-123.012177,37.997953],[-123.011989,37.997933],[-123.011235,37.998005],[-123.011054,37.997979],[-123.010935,37.997932],[-123.010653,37.997743],[-123.0102,37.997371],[-123.010031,37.997272],[-123.009837,37.997219],[-123.00933,37.997171],[-123.008393,37.99712],[-123.007386,37.997119],[-123.006906,37.997122],[-123.006344,37.997081],[-123.005451,37.996848],[-123.004718,37.996651],[-123.004069,37.996449],[-123.003757,37.996326],[-123.00343,37.996183],[-123.003242,37.99612],[-123.003059,37.996102],[-123.002929,37.996108],[-123.002308,37.996261],[-123.002159,37.996273],[-123.001984,37.996275],[-123.001109,37.996193],[-123.001071,37.996189],[-123.000373,37.996093],[-122.999975,37.996016],[-122.999659,37.995971],[-122.999393,37.995997],[-122.999239,37.996059],[-122.999122,37.996148],[-122.998549,37.9967],[-122.998424,37.996868],[-122.99823,37.997159],[-122.998147,37.997258],[-122.998021,37.997349],[-122.997857,37.997424],[-122.997664,37.997474],[-122.997139,37.997536],[-122.996793,37.997601],[-122.996609,37.99765],[-122.996369,37.997723],[-122.995889,37.997839],[-122.995663,37.997912],[-122.995504,37.997996],[-122.995335,37.99812],[-122.995249,37.9982],[-122.995084,37.998214],[-122.99498,37.998237],[-122.994492,37.997962],[-122.993522,37.997356],[-122.993188,37.997156],[-122.992724,37.996936],[-122.992577,37.99688],[-122.99221,37.996646],[-122.992127,37.9966],[-122.99204,37.996552],[-122.991861,37.996484],[-122.991427,37.996395],[-122.991111,37.996373],[-122.990303,37.996403],[-122.989954,37.996423],[-122.989706,37.996421],[-122.989512,37.996388],[-122.989316,37.996332],[-122.989152,37.996261],[-122.988726,37.996035],[-122.988547,37.99599],[-122.988105,37.995943],[-122.986383,37.995804],[-122.98619,37.995788],[-122.985853,37.995768],[-122.985581,37.995774],[-122.984822,37.995897],[-122.984687,37.9959],[-122.984503,37.99589],[-122.984202,37.995824],[-122.983925,37.995732],[-122.983154,37.995448],[-122.982969,37.995394],[-122.982788,37.995359],[-122.982525,37.995351],[-122.982475,37.995352],[-122.982358,37.995355],[-122.981938,37.995406],[-122.981534,37.995424],[-122.980665,37.995284],[-122.980257,37.995262],[-122.979975,37.995225],[-122.979827,37.995282],[-122.979596,37.99535],[-122.979434,37.995457],[-122.979303,37.995582],[-122.979161,37.995629],[-122.979054,37.995648],[-122.978909,37.995637],[-122.978634,37.99554],[-122.978457,37.995478],[-122.978284,37.995441],[-122.977826,37.995425],[-122.977542,37.995301],[-122.977386,37.995223],[-122.977359,37.995142],[-122.977371,37.994988],[-122.977307,37.994874],[-122.977158,37.99482],[-122.976913,37.994774],[-122.976231,37.994646],[-122.975645,37.994401],[-122.975244,37.994198],[-122.975213,37.994183],[-122.974359,37.993768],[-122.973846,37.993438],[-122.973464,37.993174],[-122.973148,37.992997],[-122.973016,37.99295],[-122.972876,37.992944],[-122.972746,37.993014],[-122.972607,37.993154],[-122.972481,37.993246],[-122.97235,37.99328],[-122.972299,37.99328],[-122.972174,37.993283],[-122.971943,37.993228],[-122.971852,37.993163],[-122.971758,37.993061],[-122.97168,37.9929],[-122.97158,37.992659],[-122.971537,37.992611],[-122.97155,37.992281],[-122.97157,37.991778],[-122.971776,37.991596],[-122.971978,37.991533],[-122.972294,37.991435],[-122.973478,37.990946],[-122.973507,37.990989],[-122.973528,37.991159],[-122.973347,37.991368],[-122.973278,37.991516],[-122.973243,37.991764],[-122.973285,37.991874],[-122.973618,37.992137],[-122.97373,37.992247],[-122.973959,37.992401],[-122.974195,37.992478],[-122.97432,37.992494],[-122.97457,37.992494],[-122.975014,37.99245],[-122.975056,37.992466],[-122.975118,37.992549],[-122.975181,37.992549],[-122.975229,37.992516],[-122.975236,37.992395],[-122.975271,37.992318],[-122.975625,37.992384],[-122.975694,37.992318],[-122.97575,37.992318],[-122.975842,37.992348],[-122.976014,37.992406],[-122.976285,37.992406],[-122.976444,37.992428],[-122.976889,37.992581],[-122.977264,37.992647],[-122.977583,37.992768],[-122.977965,37.992762],[-122.978132,37.992795],[-122.97827,37.992795],[-122.978743,37.992735],[-122.979097,37.992734],[-122.97934,37.992619],[-122.979444,37.99263],[-122.979742,37.992745],[-122.979971,37.992756],[-122.980096,37.992718],[-122.980214,37.992591],[-122.980277,37.992481],[-122.980353,37.992399],[-122.980415,37.992382],[-122.98052,37.992382],[-122.980589,37.99241],[-122.980804,37.992531],[-122.980943,37.99258],[-122.98129,37.992618],[-122.981582,37.992695],[-122.98179,37.992695],[-122.981978,37.992668],[-122.982193,37.992662],[-122.982297,37.992629],[-122.982443,37.99253],[-122.982679,37.992486],[-122.982977,37.992524],[-122.98304,37.992502],[-122.983116,37.992442],[-122.983158,37.992442],[-122.983179,37.992453],[-122.983179,37.992491],[-122.983102,37.992574],[-122.983102,37.992629],[-122.983352,37.992711],[-122.983561,37.992865],[-122.9837,37.992931],[-122.983818,37.992947],[-122.983964,37.992997],[-122.984095,37.992997],[-122.984429,37.992958],[-122.984477,37.992826],[-122.984588,37.992842],[-122.984686,37.992837],[-122.984915,37.993013],[-122.985005,37.99304],[-122.985123,37.99304],[-122.985491,37.992957],[-122.985533,37.992908],[-122.985546,37.99276],[-122.985678,37.992694],[-122.985734,37.992694],[-122.985838,37.992782],[-122.9859,37.992798],[-122.98597,37.992792],[-122.986032,37.992748],[-122.986039,37.992672],[-122.985928,37.992331],[-122.985935,37.992188],[-122.985969,37.992122],[-122.986011,37.992078],[-122.986212,37.992067],[-122.986386,37.992117],[-122.986553,37.992221],[-122.986657,37.992347],[-122.986733,37.992545],[-122.986782,37.992594],[-122.987199,37.99271],[-122.987185,37.992748],[-122.986845,37.992951],[-122.986782,37.993006],[-122.986775,37.99305],[-122.986838,37.993072],[-122.986928,37.993039],[-122.987025,37.993034],[-122.987067,37.993061],[-122.987039,37.99316],[-122.986977,37.993243],[-122.986956,37.993375],[-122.986991,37.993435],[-122.987102,37.993517],[-122.98722,37.993567],[-122.987289,37.993556],[-122.987324,37.993523],[-122.987359,37.993374],[-122.987373,37.993358],[-122.987435,37.993352],[-122.987498,37.993402],[-122.987539,37.993545],[-122.987602,37.993556],[-122.987678,37.993539],[-122.987706,37.993506],[-122.987734,37.993319],[-122.987831,37.993176],[-122.987872,37.993138],[-122.987928,37.993132],[-122.988004,37.99327],[-122.988129,37.993396],[-122.98813,37.993462],[-122.988081,37.993533],[-122.988081,37.993588],[-122.988123,37.993627],[-122.988359,37.993726],[-122.988602,37.993714],[-122.988692,37.993819],[-122.988727,37.993934],[-122.988796,37.994],[-122.988914,37.994033],[-122.989331,37.994077],[-122.989553,37.994209],[-122.99015,37.994412],[-122.990262,37.994521],[-122.990345,37.994582],[-122.990421,37.994615],[-122.990533,37.994637],[-122.990769,37.994642],[-122.991005,37.994582],[-122.991282,37.994548],[-122.991497,37.99445],[-122.991727,37.994411],[-122.991761,37.99434],[-122.991844,37.994274],[-122.991963,37.994279],[-122.992129,37.99435],[-122.99256,37.994372],[-122.99283,37.994229],[-122.993212,37.994152],[-122.993524,37.994059],[-122.993594,37.993998],[-122.993628,37.993932],[-122.993594,37.993646],[-122.993677,37.993438],[-122.993677,37.993366],[-122.993565,37.993229],[-122.993565,37.99319],[-122.993614,37.993136],[-122.993704,37.993102],[-122.994128,37.993064],[-122.99419,37.99302],[-122.994301,37.992888],[-122.994461,37.992838],[-122.994877,37.992794],[-122.995134,37.992838],[-122.995322,37.992975],[-122.995301,37.99303],[-122.995135,37.993096],[-122.995135,37.99314],[-122.99519,37.993283],[-122.995197,37.993459],[-122.995315,37.993541],[-122.995322,37.99375],[-122.995392,37.99381],[-122.995552,37.993893],[-122.995732,37.994036],[-122.995871,37.994101],[-122.996177,37.994156],[-122.996607,37.994167],[-122.996809,37.9942],[-122.996989,37.9942],[-122.997406,37.994084],[-122.997732,37.994062],[-122.997968,37.994013],[-122.998239,37.99399],[-122.99828,37.993952],[-122.998336,37.993771],[-122.99844,37.993672],[-122.998592,37.993683],[-122.99896,37.993869],[-122.999051,37.99388],[-122.999079,37.993864],[-122.999134,37.993781],[-122.999314,37.993402],[-122.999411,37.993353],[-122.999495,37.993358],[-122.999627,37.993413],[-122.999738,37.993561],[-122.999849,37.993594],[-122.999849,37.993687],[-122.999773,37.993819],[-122.999787,37.993885],[-123.000349,37.99394],[-123.000634,37.99394],[-123.000717,37.993918],[-123.000759,37.993857],[-123.000745,37.993638],[-123.000786,37.9935],[-123.000849,37.993407],[-123.00105,37.993308],[-123.001112,37.993291],[-123.001314,37.993231],[-123.001578,37.993198],[-123.001766,37.993209],[-123.002071,37.993319],[-123.002238,37.993319],[-123.002328,37.993286],[-123.00255,37.993089],[-123.002641,37.993061],[-123.002766,37.993056],[-123.00296,37.993094],[-123.003141,37.9931],[-123.003238,37.993138],[-123.003383,37.993265],[-123.003495,37.993248],[-123.003661,37.993128],[-123.003752,37.993111],[-123.003967,37.993254],[-123.004057,37.993287],[-123.004369,37.993232],[-123.004508,37.993232],[-123.004703,37.993271],[-123.004939,37.993365],[-123.005126,37.993403],[-123.005286,37.993409],[-123.005438,37.993376],[-123.00564,37.993376],[-123.005772,37.99342],[-123.005841,37.993469],[-123.00604,37.993732],[-123.006112,37.993827],[-123.006132,37.993931],[-123.005972,37.994112],[-123.005972,37.994222],[-123.006083,37.994497],[-123.006173,37.994623],[-123.006277,37.994728],[-123.006423,37.994827],[-123.006611,37.994898],[-123.006965,37.994942],[-123.007117,37.995003],[-123.007221,37.995009],[-123.007346,37.994959],[-123.007437,37.994959],[-123.007506,37.995091],[-123.007506,37.995141],[-123.007443,37.99525],[-123.007478,37.99536],[-123.00777,37.995492],[-123.007922,37.995514],[-123.00811,37.995558],[-123.008394,37.995558],[-123.008936,37.995515],[-123.009019,37.995504],[-123.009214,37.995427],[-123.00961,37.995422],[-123.009672,37.995372],[-123.009644,37.995246],[-123.009665,37.995131],[-123.009714,37.995103],[-123.009818,37.995092],[-123.009929,37.99512],[-123.010096,37.995125],[-123.010144,37.995142],[-123.010207,37.995219],[-123.010283,37.995367],[-123.010345,37.995362],[-123.010373,37.995329],[-123.010436,37.995125],[-123.010471,37.995098],[-123.010512,37.995103],[-123.010575,37.995164],[-123.010686,37.995219],[-123.010755,37.99529],[-123.010797,37.995549],[-123.010845,37.995576],[-123.010894,37.995549],[-123.010929,37.995472],[-123.010998,37.995406],[-123.011081,37.995406],[-123.011185,37.995472],[-123.011262,37.995455],[-123.011276,37.995428],[-123.011241,37.99512],[-123.011207,37.995093],[-123.01113,37.995093],[-123.011061,37.995115],[-123.011033,37.995098],[-123.01104,37.994944],[-123.011054,37.994928],[-123.011116,37.994922],[-123.011221,37.994972],[-123.01129,37.994966],[-123.011387,37.994747],[-123.011443,37.994697],[-123.011533,37.994681],[-123.011589,37.99473],[-123.011589,37.994961],[-123.011609,37.995033],[-123.011672,37.995093],[-123.011679,37.995164],[-123.011533,37.995307],[-123.011533,37.995428],[-123.011678,37.995538],[-123.011852,37.995615],[-123.011977,37.995642],[-123.012109,37.995632],[-123.012213,37.995593],[-123.012268,37.995533],[-123.012408,37.995214],[-123.012588,37.995022],[-123.012942,37.994879],[-123.01306,37.994791],[-123.013179,37.994742],[-123.013533,37.994649],[-123.013706,37.994566],[-123.013776,37.994446],[-123.013845,37.994182],[-123.013929,37.994055],[-123.013933,37.994052]]],[[[-122.84052,38.087056],[-122.840504,38.087044],[-122.840445,38.086988],[-122.840228,38.08678],[-122.840156,38.086711],[-122.83998,38.08659],[-122.839564,38.086303],[-122.839454,38.086227],[-122.839279,38.086106],[-122.839822,38.085881],[-122.840415,38.085637],[-122.841522,38.085455],[-122.841702,38.085426],[-122.842091,38.085308],[-122.842037,38.085094],[-122.841863,38.085067],[-122.8411,38.084949],[-122.840786,38.084755],[-122.840754,38.084719],[-122.840642,38.084591],[-122.840648,38.084365],[-122.840657,38.084026],[-122.840636,38.08385],[-122.840631,38.083806],[-122.84066,38.083562],[-122.840787,38.083262],[-122.841496,38.083097],[-122.841689,38.083037],[-122.842183,38.082887],[-122.841853,38.082642],[-122.841698,38.082646],[-122.840635,38.082677],[-122.840074,38.082968],[-122.839573,38.083229],[-122.839292,38.08308],[-122.839104,38.082981],[-122.838398,38.0832],[-122.838095,38.083295],[-122.837972,38.083333],[-122.837971,38.083333],[-122.837798,38.083387],[-122.837757,38.083363],[-122.83768,38.083318],[-122.837599,38.083269],[-122.837516,38.083227],[-122.837427,38.083189],[-122.837267,38.083145],[-122.837172,38.083114],[-122.837078,38.083072],[-122.836995,38.083046],[-122.836903,38.083018],[-122.836862,38.083054],[-122.836825,38.08311],[-122.836705,38.083055],[-122.836661,38.083035],[-122.83651,38.082948],[-122.836705,38.082855],[-122.837293,38.082576],[-122.837489,38.082484],[-122.837546,38.082456],[-122.837718,38.082376],[-122.837776,38.082349],[-122.837908,38.082286],[-122.838306,38.082098],[-122.838439,38.082036],[-122.839395,38.081606],[-122.840376,38.081165],[-122.841584,38.080621],[-122.847761,38.077845],[-122.847747,38.076316],[-122.848275,38.076214],[-122.848655,38.076346],[-122.848924,38.075713],[-122.849334,38.075623],[-122.849706,38.075542],[-122.850155,38.075964],[-122.850101,38.076489],[-122.851851,38.075688],[-122.851915,38.075515],[-122.851906,38.075444],[-122.851865,38.07534],[-122.851805,38.075291],[-122.8518,38.075285],[-122.851667,38.075134],[-122.851608,38.075055],[-122.851595,38.074996],[-122.851591,38.074924],[-122.851584,38.074899],[-122.851572,38.074878],[-122.85153,38.074814],[-122.851512,38.074766],[-122.851488,38.074733],[-122.851426,38.074461],[-122.851414,38.074385],[-122.851392,38.07436],[-122.851177,38.07436],[-122.851161,38.074349],[-122.851093,38.0743],[-122.850729,38.074041],[-122.850724,38.074038],[-122.850689,38.073211],[-122.850684,38.073078],[-122.850532,38.072512],[-122.85061,38.071692],[-122.850916,38.071136],[-122.851044,38.070859],[-122.851182,38.070563],[-122.851411,38.070321],[-122.851302,38.070194],[-122.851341,38.07017],[-122.851441,38.070134],[-122.851546,38.070105],[-122.851627,38.070094],[-122.85168,38.070049],[-122.851804,38.069922],[-122.851897,38.069776],[-122.851941,38.069698],[-122.851947,38.069617],[-122.851919,38.069547],[-122.851857,38.069465],[-122.851808,38.069388],[-122.851691,38.069139],[-122.851671,38.069096],[-122.851608,38.068973],[-122.851585,38.068919],[-122.85157,38.068856],[-122.85151,38.068686],[-122.851499,38.068616],[-122.851505,38.068528],[-122.851484,38.068428],[-122.851477,38.068341],[-122.851438,38.068184],[-122.851299,38.06781],[-122.851256,38.067643],[-122.851177,38.067447],[-122.85117,38.067373],[-122.851125,38.06728],[-122.851074,38.067153],[-122.851022,38.06699],[-122.85102,38.066906],[-122.85104,38.066862],[-122.851055,38.066811],[-122.851121,38.066739],[-122.851144,38.066675],[-122.851193,38.06662],[-122.851254,38.066542],[-122.851282,38.066471],[-122.851295,38.066333],[-122.851262,38.06624],[-122.851156,38.066131],[-122.851078,38.066062],[-122.850977,38.065963],[-122.850902,38.065867],[-122.850761,38.065719],[-122.850628,38.065668],[-122.850508,38.065637],[-122.850341,38.06561],[-122.850176,38.065568],[-122.850153,38.065563],[-122.849913,38.065487],[-122.849662,38.065348],[-122.84958,38.065303],[-122.849523,38.065253],[-122.84947,38.065187],[-122.849407,38.065061],[-122.849308,38.064898],[-122.849263,38.064805],[-122.849232,38.064638],[-122.84923,38.064582],[-122.848893,38.063924],[-122.848765,38.063505],[-122.84843,38.063275],[-122.848414,38.063264],[-122.847485,38.063071],[-122.846892,38.062838],[-122.846549,38.062661],[-122.846149,38.062048],[-122.845438,38.061283],[-122.844874,38.06092],[-122.844646,38.060707],[-122.844372,38.060453],[-122.844051,38.060195],[-122.843254,38.060172],[-122.843166,38.060098],[-122.843066,38.060013],[-122.842918,38.059862],[-122.842839,38.059781],[-122.842752,38.059734],[-122.842494,38.059593],[-122.842408,38.059547],[-122.84246,38.059548],[-122.842564,38.059527],[-122.84272,38.059498],[-122.843014,38.059378],[-122.843052,38.059363],[-122.843149,38.059295],[-122.843205,38.059254],[-122.843373,38.059135],[-122.84343,38.059096],[-122.844098,38.058624],[-122.84439,38.058605],[-122.844745,38.058788],[-122.844855,38.058862],[-122.845636,38.059391],[-122.845729,38.059571],[-122.845785,38.059864],[-122.845835,38.059968],[-122.846005,38.060085],[-122.846281,38.06008],[-122.846613,38.060015],[-122.846972,38.059852],[-122.847296,38.059452],[-122.847516,38.059231],[-122.848012,38.058942],[-122.848408,38.058858],[-122.848752,38.058913],[-122.849132,38.058975],[-122.849579,38.059034],[-122.850386,38.059045],[-122.85073,38.059073],[-122.850894,38.059064],[-122.851009,38.059059],[-122.851254,38.059009],[-122.851363,38.05896],[-122.851475,38.05891],[-122.851753,38.05874],[-122.851965,38.058531],[-122.851985,38.058386],[-122.851859,38.058149],[-122.851757,38.057885],[-122.851778,38.057759],[-122.851914,38.057512],[-122.851977,38.057358],[-122.851979,38.057218],[-122.851844,38.056795],[-122.85182,38.056547],[-122.851803,38.056369],[-122.851839,38.055762],[-122.851959,38.055509],[-122.852672,38.054499],[-122.85307,38.053895],[-122.853327,38.053457],[-122.853738,38.052774],[-122.853961,38.05254],[-122.855247,38.051438],[-122.856948,38.05003],[-122.857044,38.049951],[-122.857541,38.049525],[-122.858071,38.049044],[-122.858246,38.048947],[-122.859394,38.048798],[-122.860568,38.048653],[-122.860858,38.048525],[-122.861099,38.048343],[-122.861175,38.048287],[-122.861384,38.048212],[-122.863412,38.04773],[-122.863608,38.047628],[-122.863681,38.047469],[-122.863681,38.047183],[-122.863771,38.046964],[-122.864271,38.046627],[-122.864537,38.046371],[-122.864715,38.046078],[-122.865004,38.045787],[-122.865206,38.04565],[-122.865311,38.045599],[-122.865405,38.045555],[-122.865666,38.045539],[-122.866469,38.045617],[-122.866831,38.045637],[-122.867094,38.045587],[-122.86739,38.045265],[-122.868147,38.044891],[-122.868698,38.044582],[-122.868764,38.044553],[-122.869829,38.044106],[-122.870838,38.043918],[-122.871183,38.043788],[-122.8715,38.043565],[-122.871636,38.043358],[-122.871682,38.043116],[-122.871508,38.042565],[-122.871541,38.042434],[-122.871664,38.042276],[-122.872108,38.041927],[-122.872729,38.041493],[-122.872883,38.041254],[-122.872883,38.041247],[-122.872915,38.04099],[-122.872859,38.040776],[-122.872695,38.040445],[-122.872614,38.040326],[-122.872437,38.03996],[-122.872363,38.03969],[-122.872372,38.039385],[-122.872414,38.038871],[-122.872488,38.038346],[-122.872536,38.038009],[-122.872566,38.037856],[-122.872725,38.037468],[-122.872901,38.037291],[-122.872945,38.037247],[-122.87331,38.036993],[-122.87383,38.036788],[-122.874198,38.036611],[-122.874624,38.036358],[-122.874672,38.03633],[-122.875227,38.036046],[-122.875569,38.035915],[-122.876088,38.035782],[-122.876652,38.035625],[-122.877095,38.03536],[-122.877421,38.035135],[-122.877556,38.034892],[-122.877563,38.034881],[-122.877925,38.033447],[-122.878065,38.033153],[-122.878223,38.032935],[-122.87849,38.032716],[-122.878782,38.032489],[-122.879089,38.032179],[-122.879229,38.031888],[-122.879291,38.031683],[-122.879449,38.031468],[-122.879757,38.031234],[-122.880083,38.031135],[-122.880406,38.031063],[-122.881051,38.030916],[-122.881451,38.030755],[-122.881593,38.030617],[-122.881679,38.030477],[-122.881759,38.030268],[-122.881787,38.030117],[-122.881921,38.029421],[-122.882191,38.028791],[-122.882345,38.028165],[-122.88261,38.028102],[-122.882439,38.027823],[-122.882397,38.027755],[-122.882462,38.027624],[-122.882797,38.02695],[-122.882943,38.026658],[-122.882578,38.026556],[-122.882146,38.026437],[-122.8815,38.026296],[-122.881479,38.026282],[-122.88132,38.026178],[-122.881186,38.026046],[-122.880088,38.024642],[-122.880222,38.024687],[-122.880777,38.024902],[-122.881461,38.025078],[-122.881951,38.025205],[-122.882583,38.025436],[-122.883263,38.02559],[-122.883992,38.025728],[-122.88461,38.025876],[-122.885631,38.026014],[-122.886111,38.026047],[-122.887076,38.026202],[-122.887403,38.026235],[-122.888139,38.02635],[-122.888694,38.026389],[-122.889118,38.026466],[-122.889923,38.026653],[-122.891577,38.02689],[-122.892236,38.026979],[-122.892396,38.027023],[-122.892583,38.027105],[-122.892889,38.027187],[-122.893702,38.027325],[-122.894521,38.027507],[-122.896237,38.027777],[-122.896841,38.027837],[-122.897598,38.02786],[-122.898432,38.027964],[-122.900057,38.028091],[-122.900758,38.028163],[-122.901599,38.028262],[-122.901828,38.028262],[-122.902245,38.028246],[-122.902397,38.028246],[-122.903412,38.028318],[-122.90453,38.02834],[-122.905106,38.028384],[-122.907315,38.028467],[-122.90819,38.028539],[-122.908767,38.028572],[-122.909191,38.028633],[-122.909593,38.028644],[-122.910205,38.028682],[-122.91076,38.028682],[-122.91126,38.028639],[-122.912643,38.028611],[-122.914164,38.028612],[-122.914873,38.02865],[-122.915949,38.028629],[-122.916935,38.028689],[-122.91754,38.028667],[-122.91795,38.028629],[-122.918677,38.028625],[-122.91895,38.028624],[-122.919999,38.028822],[-122.920735,38.028882],[-122.921367,38.029025],[-122.921596,38.029091],[-122.921777,38.029174],[-122.922048,38.02924],[-122.922235,38.029262],[-122.922589,38.029355],[-122.922694,38.029377],[-122.922985,38.029388],[-122.923159,38.02935],[-122.923242,38.029317],[-122.923444,38.029168],[-122.923624,38.029092],[-122.924159,38.028899],[-122.924361,38.02885],[-122.924534,38.028833],[-122.924708,38.028828],[-122.924868,38.028828],[-122.925139,38.02885],[-122.925583,38.028812],[-122.925986,38.028839],[-122.926347,38.028927],[-122.926729,38.028966],[-122.92709,38.029032],[-122.927459,38.029136],[-122.927625,38.02924],[-122.928077,38.029658],[-122.928362,38.029889],[-122.928723,38.030136],[-122.928771,38.030191],[-122.929188,38.030433],[-122.929445,38.030603],[-122.929709,38.030817],[-122.929931,38.031054],[-122.930098,38.031197],[-122.930183,38.031293],[-122.932034,38.031411],[-122.937589,38.031766],[-122.939441,38.031885],[-122.939323,38.031988],[-122.939225,38.03217],[-122.938996,38.032796],[-122.938788,38.033049],[-122.938538,38.033263],[-122.938385,38.033345],[-122.938211,38.033389],[-122.937806,38.033438],[-122.937315,38.033499],[-122.936655,38.03362],[-122.936391,38.033702],[-122.936218,38.033785],[-122.935988,38.034026],[-122.935863,38.034241],[-122.935801,38.034444],[-122.935836,38.03473],[-122.935947,38.035103],[-122.936204,38.03546],[-122.936301,38.035537],[-122.936454,38.035592],[-122.936822,38.035675],[-122.93735,38.035741],[-122.93801,38.03579],[-122.938468,38.035917],[-122.938621,38.035944],[-122.938899,38.035955],[-122.939059,38.035939],[-122.939205,38.035889],[-122.93926,38.035829],[-122.93926,38.03573],[-122.939177,38.03551],[-122.939022,38.035253],[-122.938955,38.035142],[-122.938767,38.034895],[-122.938767,38.034818],[-122.938823,38.034763],[-122.939149,38.034675],[-122.939399,38.034658],[-122.939677,38.034697],[-122.939844,38.034735],[-122.94026,38.034895],[-122.940386,38.035016],[-122.940478,38.035183],[-122.940504,38.03523],[-122.940594,38.035483],[-122.940643,38.035746],[-122.940657,38.035961],[-122.940587,38.036367],[-122.940594,38.036521],[-122.940983,38.037081],[-122.941115,38.037411],[-122.941192,38.037543],[-122.941462,38.037889],[-122.941615,38.038301],[-122.941775,38.038565],[-122.941872,38.038664],[-122.942025,38.038768],[-122.942234,38.03901],[-122.942428,38.039175],[-122.942845,38.039394],[-122.943498,38.039592],[-122.943581,38.039647],[-122.943734,38.039834],[-122.943838,38.040081],[-122.944144,38.040581],[-122.944422,38.040927],[-122.945346,38.041652],[-122.945548,38.041784],[-122.945858,38.042018],[-122.945992,38.042119],[-122.946368,38.042487],[-122.946708,38.042713],[-122.946882,38.042861],[-122.947285,38.043339],[-122.947688,38.044009],[-122.948181,38.044531],[-122.948327,38.044833],[-122.948501,38.045278],[-122.948827,38.045674],[-122.948939,38.045855],[-122.949119,38.046058],[-122.949251,38.046135],[-122.949974,38.046328],[-122.950141,38.046399],[-122.950509,38.046597],[-122.951009,38.0468],[-122.951211,38.046926],[-122.951447,38.047119],[-122.951892,38.047564],[-122.95219,38.047783],[-122.952399,38.047893],[-122.952976,38.048113],[-122.953691,38.048481],[-122.953865,38.048547],[-122.954539,38.048756],[-122.955081,38.049008],[-122.955276,38.049058],[-122.955637,38.049063],[-122.956005,38.048964],[-122.956492,38.048755],[-122.956783,38.048689],[-122.956846,38.048755],[-122.95686,38.04881],[-122.95695,38.04942],[-122.956957,38.04975],[-122.956999,38.049904],[-122.957131,38.050052],[-122.957486,38.050354],[-122.957819,38.050519],[-122.958194,38.050601],[-122.958291,38.050651],[-122.958285,38.050727],[-122.958243,38.050914],[-122.958222,38.051282],[-122.958257,38.051381],[-122.958326,38.051464],[-122.958445,38.051535],[-122.95882,38.051656],[-122.959431,38.05181],[-122.959529,38.051848],[-122.959702,38.052018],[-122.959807,38.05209],[-122.95998,38.052134],[-122.96021,38.052161],[-122.9603,38.0522],[-122.961002,38.052568],[-122.961155,38.052694],[-122.961224,38.052771],[-122.961245,38.052897],[-122.961176,38.052985],[-122.961072,38.053018],[-122.960926,38.053018],[-122.960738,38.052963],[-122.960397,38.052798],[-122.960293,38.052771],[-122.960106,38.052738],[-122.959953,38.052755],[-122.959849,38.05287],[-122.959751,38.053062],[-122.959647,38.053205],[-122.959612,38.053348],[-122.959647,38.053425],[-122.959849,38.053568],[-122.960113,38.0537],[-122.960314,38.053875],[-122.960676,38.054007],[-122.961107,38.054293],[-122.961301,38.054381],[-122.961593,38.054446],[-122.961878,38.054562],[-122.962017,38.054655],[-122.962198,38.054743],[-122.962351,38.054793],[-122.96274,38.05488],[-122.962976,38.054913],[-122.96333,38.054902],[-122.963414,38.05493],[-122.963497,38.055023],[-122.963608,38.055331],[-122.963678,38.055462],[-122.963717,38.055497],[-122.963775,38.05555],[-122.964046,38.05577],[-122.964144,38.055896],[-122.964151,38.056012],[-122.964074,38.056094],[-122.963845,38.056303],[-122.96363,38.056418],[-122.963574,38.056358],[-122.963206,38.056204],[-122.963046,38.056072],[-122.962921,38.056007],[-122.962629,38.05588],[-122.962115,38.055595],[-122.961746,38.055441],[-122.961434,38.05526],[-122.961218,38.055155],[-122.96101,38.055111],[-122.960565,38.055111],[-122.960127,38.055024],[-122.959849,38.054738],[-122.959467,38.054447],[-122.958598,38.053985],[-122.958146,38.053804],[-122.95782,38.053711],[-122.957625,38.053513],[-122.957445,38.053442],[-122.957167,38.0532],[-122.956951,38.052986],[-122.956832,38.052823],[-122.956638,38.052557],[-122.956187,38.052145],[-122.956082,38.051964],[-122.955895,38.051739],[-122.955763,38.051629],[-122.955644,38.051557],[-122.955505,38.051486],[-122.955366,38.051448],[-122.955234,38.051459],[-122.955019,38.051525],[-122.954929,38.051525],[-122.954477,38.051415],[-122.95441,38.051383],[-122.954289,38.051327],[-122.953789,38.051019],[-122.953456,38.05086],[-122.952636,38.050569],[-122.952121,38.050327],[-122.95185,38.050223],[-122.951566,38.050069],[-122.951225,38.049827],[-122.950933,38.049701],[-122.950815,38.049624],[-122.94987,38.048794],[-122.949662,38.048679],[-122.949592,38.048652],[-122.94955,38.048657],[-122.949391,38.048773],[-122.949189,38.049036],[-122.948925,38.049503],[-122.948752,38.049959],[-122.948585,38.050575],[-122.948502,38.050926],[-122.948363,38.051448],[-122.948321,38.0518],[-122.94832,38.051837],[-122.948314,38.052163],[-122.948217,38.05275],[-122.948175,38.053245],[-122.948217,38.053932],[-122.948356,38.054344],[-122.948453,38.054706],[-122.948509,38.054756],[-122.948553,38.054776],[-122.948096,38.055972],[-122.946726,38.05956],[-122.94627,38.060757],[-122.946022,38.060772],[-122.945654,38.060871],[-122.945473,38.060898],[-122.945251,38.060893],[-122.944862,38.060843],[-122.944327,38.060865],[-122.944327,38.060981],[-122.944424,38.061124],[-122.944438,38.061223],[-122.944389,38.061585],[-122.944306,38.061838],[-122.944229,38.061948],[-122.944063,38.062113],[-122.943986,38.062173],[-122.94375,38.062277],[-122.943243,38.062525],[-122.94227,38.06292],[-122.942075,38.063025],[-122.941811,38.063255],[-122.941665,38.063481],[-122.941596,38.063662],[-122.941498,38.064025],[-122.941492,38.064178],[-122.94154,38.064464],[-122.941679,38.06481],[-122.941749,38.065079],[-122.94177,38.065343],[-122.941721,38.065733],[-122.941797,38.065892],[-122.941915,38.06598],[-122.942034,38.066068],[-122.942103,38.066145],[-122.942138,38.066294],[-122.942131,38.06642],[-122.942055,38.066546],[-122.941596,38.066942],[-122.941499,38.067096],[-122.941443,38.067409],[-122.941436,38.067673],[-122.941297,38.068057],[-122.941234,38.06864],[-122.941172,38.068859],[-122.940852,38.06942],[-122.940588,38.069777],[-122.94047,38.070156],[-122.940255,38.070568],[-122.940123,38.070689],[-122.939865,38.070821],[-122.939796,38.070936],[-122.939706,38.07148],[-122.939706,38.07209],[-122.939671,38.072617],[-122.939504,38.073546],[-122.939435,38.074084],[-122.939344,38.075255],[-122.939344,38.075804],[-122.939372,38.076123],[-122.939532,38.076414],[-122.939838,38.076815],[-122.940053,38.077035],[-122.940187,38.077146],[-122.940227,38.077178],[-122.940251,38.0772],[-122.940276,38.077221],[-122.940276,38.07726],[-122.940074,38.077612],[-122.940005,38.077892],[-122.9399,38.078139],[-122.939727,38.078337],[-122.939518,38.078523],[-122.939143,38.078771],[-122.939046,38.078859],[-122.938809,38.07932],[-122.938601,38.079584],[-122.937989,38.080078],[-122.937739,38.080216],[-122.93748,38.080336],[-122.937148,38.08049],[-122.936814,38.080732],[-122.936731,38.080847],[-122.936717,38.080924],[-122.936738,38.081012],[-122.936738,38.081051],[-122.936752,38.081199],[-122.936731,38.081342],[-122.936627,38.081672],[-122.936494,38.081913],[-122.936362,38.082221],[-122.936355,38.082408],[-122.936494,38.082496],[-122.936731,38.082595],[-122.937294,38.082688],[-122.93744,38.082732],[-122.93753,38.082831],[-122.937537,38.082935],[-122.937516,38.083023],[-122.937384,38.083188],[-122.936355,38.084111],[-122.936008,38.08449],[-122.935924,38.084638],[-122.935869,38.084792],[-122.935848,38.084853],[-122.935758,38.085034],[-122.93541,38.085589],[-122.935229,38.085803],[-122.935097,38.085913],[-122.93484,38.086072],[-122.934694,38.086182],[-122.93461,38.08627],[-122.934569,38.086352],[-122.934548,38.086512],[-122.934624,38.086759],[-122.934965,38.087294],[-122.935062,38.087446],[-122.935194,38.087759],[-122.935215,38.088067],[-122.935215,38.088753],[-122.935159,38.089034],[-122.935055,38.089165],[-122.934909,38.08927],[-122.934659,38.089407],[-122.934409,38.089506],[-122.934332,38.089555],[-122.933227,38.089924],[-122.933199,38.089935],[-122.933164,38.089946],[-122.932719,38.09011],[-122.932073,38.090248],[-122.931934,38.090314],[-122.931892,38.090374],[-122.931878,38.090506],[-122.931948,38.090808],[-122.931892,38.090885],[-122.93176,38.090967],[-122.931683,38.091022],[-122.931635,38.091022],[-122.931537,38.09094],[-122.931447,38.090918],[-122.931371,38.090923],[-122.931336,38.090918],[-122.931169,38.090967],[-122.931051,38.091072],[-122.930926,38.091247],[-122.930814,38.091363],[-122.930321,38.091544],[-122.930112,38.091511],[-122.929813,38.091389],[-122.929681,38.091335],[-122.929354,38.091236],[-122.929257,38.09132],[-122.928967,38.091575],[-122.928923,38.091615],[-122.928874,38.091664],[-122.929033,38.09175],[-122.929089,38.091756],[-122.929354,38.091785],[-122.929797,38.091736],[-122.930033,38.09171],[-122.930427,38.091662],[-122.930992,38.091625],[-122.931305,38.091648],[-122.931636,38.091739],[-122.931747,38.091789],[-122.932101,38.091951],[-122.932592,38.092256],[-122.932838,38.092398],[-122.933048,38.092463],[-122.933846,38.092684],[-122.934333,38.092876],[-122.934693,38.093061],[-122.935494,38.093594],[-122.936354,38.094179],[-122.936417,38.094222],[-122.937435,38.094934],[-122.937655,38.095062],[-122.937815,38.095121],[-122.937779,38.095228],[-122.937705,38.095327],[-122.937602,38.095383],[-122.93749,38.09542],[-122.937123,38.095543],[-122.936916,38.095668],[-122.936939,38.095921],[-122.937237,38.096309],[-122.937205,38.096333],[-122.936833,38.096622],[-122.938114,38.097618],[-122.938527,38.098149],[-122.93919,38.099002],[-122.939656,38.099373],[-122.940396,38.099891],[-122.941524,38.100887],[-122.942418,38.101688],[-122.943172,38.102466],[-122.943418,38.102923],[-122.943798,38.103626],[-122.944035,38.104279],[-122.944317,38.10503],[-122.944798,38.105259],[-122.944957,38.105367],[-122.9463,38.106281],[-122.946538,38.106468],[-122.946725,38.106635],[-122.946819,38.10672],[-122.94704,38.106895],[-122.947185,38.107178],[-122.963376,38.107162],[-122.962987,38.107794],[-122.962598,38.108475],[-122.96248,38.108909],[-122.96248,38.109113],[-122.962515,38.109343],[-122.962508,38.109711],[-122.96248,38.109887],[-122.962272,38.110409],[-122.962042,38.110953],[-122.961869,38.111261],[-122.961,38.112409],[-122.960798,38.112744],[-122.96068,38.112992],[-122.960583,38.113239],[-122.96059,38.113437],[-122.960618,38.113563],[-122.96059,38.114255],[-122.960541,38.114667],[-122.960472,38.114915],[-122.960104,38.115689],[-122.959874,38.116085],[-122.959471,38.117019],[-122.959409,38.1172],[-122.959332,38.117574],[-122.959172,38.118052],[-122.958936,38.119189],[-122.95845,38.119722],[-122.958311,38.119909],[-122.958213,38.120107],[-122.957991,38.120788],[-122.957796,38.121074],[-122.957629,38.121404],[-122.957532,38.121904],[-122.957567,38.122299],[-122.957567,38.122634],[-122.957532,38.122794],[-122.957345,38.12337],[-122.957171,38.123744],[-122.956997,38.124228],[-122.95667,38.124744],[-122.956587,38.124925],[-122.960979,38.124925],[-122.960856,38.12898],[-122.957384,38.139336],[-122.957075,38.140493],[-122.955538,38.144394],[-122.954319,38.147667],[-122.953555,38.150672],[-122.9533,38.153877],[-122.953555,38.157281],[-122.953555,38.160486],[-122.955339,38.163091],[-122.956358,38.166295],[-122.958652,38.1689],[-122.958396,38.171904],[-122.958652,38.174507],[-122.962474,38.17611],[-122.965786,38.177713],[-122.970373,38.177913],[-122.972158,38.180717],[-122.971903,38.184123],[-122.969354,38.187127],[-122.970628,38.18913],[-122.971392,38.192535],[-122.970373,38.195139],[-122.970628,38.198744],[-122.972411,38.200147],[-122.974195,38.20195],[-122.976234,38.204754],[-122.978783,38.206556],[-122.982096,38.20916],[-122.984389,38.212165],[-122.985918,38.216572],[-122.986173,38.220377],[-122.989486,38.223382],[-122.991525,38.224984],[-122.995092,38.225384],[-122.998404,38.227188],[-122.999423,38.230593],[-122.997895,38.233397],[-122.99866,38.2358],[-122.999423,38.237603],[-123.000188,38.240007],[-122.998915,38.243212],[-122.998202,38.243701],[-122.99571,38.245412],[-122.993653,38.244862],[-122.991937,38.243683],[-122.989578,38.242588],[-122.987433,38.241999],[-122.985609,38.241662],[-122.983893,38.240231],[-122.982418,38.238898],[-122.979831,38.239641],[-122.978001,38.240167],[-122.974247,38.233212],[-122.972094,38.23063],[-122.971959,38.230469],[-122.967179,38.226607],[-122.963645,38.223446],[-122.963035,38.2229],[-122.962859,38.222742],[-122.962642,38.222525],[-122.962313,38.222196],[-122.960982,38.220866],[-122.95965,38.219537],[-122.959499,38.219386],[-122.95911,38.218998],[-122.958721,38.21861],[-122.957743,38.217634],[-122.956581,38.216475],[-122.95262,38.212813],[-122.946702,38.20841],[-122.943728,38.206198],[-122.937912,38.201372],[-122.937554,38.201075],[-122.932002,38.19792],[-122.928707,38.194056],[-122.92374,38.187658],[-122.919018,38.181912],[-122.917235,38.179742],[-122.91225,38.173617],[-122.907214,38.167637],[-122.899786,38.157736],[-122.898116,38.154944],[-122.896477,38.152232],[-122.893512,38.148576],[-122.891823,38.145267],[-122.890073,38.141781],[-122.887823,38.138287],[-122.885737,38.134098],[-122.884832,38.132671],[-122.883692,38.13087],[-122.881154,38.126921],[-122.876413,38.122308],[-122.876105,38.121959],[-122.87119,38.118878],[-122.86912,38.117448],[-122.868697,38.117156],[-122.865861,38.115149],[-122.862491,38.112527],[-122.862251,38.112335],[-122.859425,38.110076],[-122.857161,38.107984],[-122.855937,38.106961],[-122.855411,38.106575],[-122.852047,38.103766],[-122.847848,38.101152],[-122.847326,38.100813],[-122.848163,38.100204],[-122.850677,38.09838],[-122.851515,38.097773],[-122.851474,38.097741],[-122.851195,38.097537],[-122.850987,38.097438],[-122.850889,38.097372],[-122.850854,38.097295],[-122.850841,38.09718],[-122.851,38.096795],[-122.850979,38.096465],[-122.850896,38.096207],[-122.850742,38.0959],[-122.850514,38.095591],[-122.85045,38.095504],[-122.850297,38.0954],[-122.849644,38.095048],[-122.849504,38.094944],[-122.849393,38.094823],[-122.849087,38.094615],[-122.848524,38.094335],[-122.84803,38.094126],[-122.847175,38.093615],[-122.846709,38.093275],[-122.846306,38.092918],[-122.846006,38.092605],[-122.845874,38.09244],[-122.845624,38.092033],[-122.84545,38.09155],[-122.845283,38.091358],[-122.844921,38.091077],[-122.844692,38.090951],[-122.84449,38.09088],[-122.844265,38.09083],[-122.844094,38.090792],[-122.843385,38.090737],[-122.843183,38.090737],[-122.842752,38.090798],[-122.842613,38.090798],[-122.842481,38.09077],[-122.842377,38.090726],[-122.842231,38.090606],[-122.841834,38.090265],[-122.841793,38.09021],[-122.841991,38.089974],[-122.842439,38.089446],[-122.84262,38.089302],[-122.842703,38.089237],[-122.842847,38.089095],[-122.842819,38.089074],[-122.842737,38.089012],[-122.84271,38.088992],[-122.842599,38.088916],[-122.842548,38.088882],[-122.842309,38.088641],[-122.842215,38.088546],[-122.842175,38.088506],[-122.842058,38.088387],[-122.84202,38.088348],[-122.841957,38.088285],[-122.841771,38.088097],[-122.84171,38.088035],[-122.841684,38.088011],[-122.841606,38.08794],[-122.841581,38.087917],[-122.841565,38.087902],[-122.841472,38.087811],[-122.841328,38.087669],[-122.841128,38.087516],[-122.841008,38.087425],[-122.84091,38.087351],[-122.840617,38.087129],[-122.84052,38.087056]]]]}}]};
				bounds = new google.maps.LatLngBounds(new google.maps.LatLng(37.990946,-123.02419), new google.maps.LatLng(38.245412,-122.83651));
				</script></head>
<body>






<div class="container">
	<div class="container_bg">
		<div id="header" class="row">
			<div class="col-xs-12 col-sm-4 logo-container">
				<a href="/"><img src="/images/logo.cache_extend.1483653703.png" class="img-responsive"></a>
			</div>
			<div class="col-xs-12 col-sm-5 social-media-row">
					<ul style="list-style: none; padding: 0; font-size: 12px; font-weight: normal; ">
					<li style="display: inline-block; padding: 0; margin: 3px; font-weight: bold" class="hidden-xs">Share:</li>
				<li style="background-color: #306199; display: inline-block; margin: 3px; text-align: center; padding: 3px; border-radius: 4px; width: 24px;">
			<a href="https://www.facebook.com/sharer/sharer.php?u=http%3A%2F%2Fwww.unitedstateszipcodes.org&t=U.S.+ZIP+Codes%3A+Free+ZIP+code+map+and+zip+code+lookup" target="_blank" title="Share on Facebook" style="color: #FFFFFF; text-decoration: none"><i class="fa fa-facebook"></i></a>
		</li>
		<li style="background-color: #26c4f1; display: inline-block; margin: 3px; text-align: center; padding: 3px; border-radius: 4px; width: 24px;">
			<a href="https://twitter.com/intent/tweet?url=http%3A%2F%2Fwww.unitedstateszipcodes.org&text=U.S.+ZIP+Codes%3A+Free+ZIP+code+map+and+zip+code+lookup&via=" target="_blank" title="Tweet" style="color: #FFFFFF; text-decoration: none"><i class="fa fa-twitter"></i></a>
		</li>
					<li style="background-color: #007bb6; display: inline-block; margin: 3px; text-align: center; padding: 3px; border-radius: 4px; width: 24px;">
				<a href="https://www.linkedin.com/shareArticle?mini=true&url=http%3A%2F%2Fwww.unitedstateszipcodes.org&title=U.S.+ZIP+Codes%3A+Free+ZIP+code+map+and+zip+code+lookup&summary=Find+the+ZIP+for+an+address%2C+see+ZIP+maps%2C+compare+shipping+options%2C+demographics%2C+and+spreadsheet+download.&source=http%3A%2F%2Fwww.unitedstateszipcodes.org" target="_blank" title="Share on LinkedIn" style="color: #FFFFFF; text-decoration: none"><i class="fa fa-linkedin"></i></a>
			</li>
									<li style="background-color: #444444; display: inline-block; margin: 3px; text-align: center; padding: 3px; border-radius: 4px; width: 24px;">
				<a href="mailto:?subject=U.S.%20ZIP%20Codes%3A%20Free%20ZIP%20code%20map%20and%20zip%20code%20lookup&body=Find%20the%20ZIP%20for%20an%20address%2C%20see%20ZIP%20maps%2C%20compare%20shipping%20options%2C%20demographics%2C%20and%20spreadsheet%20download.%0A%0Ahttp%3A%2F%2Fwww.unitedstateszipcodes.org" target="_blank" title="Email" style="color: #FFFFFF; text-decoration: none"><i class="fa fa-envelope"></i></a>
			</li>
			</ul>
				</div>
		</div>

		<div class="row">
			<div class="col-sm-8 col-sm-push-4">
				<div id="blue-bar">
					<a href="/">Home</a>
					<a href="/printable-zip-code-maps/">Printable Maps</a>
					<a href="/shipping-calculator/">Shipping Calculator</a>
					<a href="/zip-code-database/">ZIP Code Database</a>
				</div>
			</div>
		</div>

		<div class="navbar navbar-inverse" role="navigation">
			<div class="navbar-header">
				<button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
					<span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span>
				</button>
			</div>
			<div class="collapse navbar-collapse">
				<ul class="nav navbar-nav">
					<li><a href="/">Home</a></li>
					<li><a href="/printable-zip-code-maps/">Printable Maps</a></li>
					<li><a href="/shipping-calculator/">Shipping Calculator</a></li>
					<li><a href="/zip-code-database/">ZIP Code Database</a></li>
				</ul>
			</div>
		</div>

		<div class="row">
			<div class="col-xs-12">



	<form role="form" id="q_form" action="/" method="post">
		<div class="row" id="search-forms">
			<div class="col-xs-12 col-lg-5">
				<h2>Search by ZIP, address, city, or county:</h2>
			</div>
			<div class="col-xs-12 col-lg-7">
				<div class="input-group has-error twitter-typeahead-append-input-group">
					<input type="text" name="q" id="q" class="form-control" placeholder="Enter a location" value="94937">
					<span class="input-group-btn">
						<button type="submit" class="btn btn-danger"><i class="fa fa-search" aria-hidden="true"></i> <span class="hidden-xs">Search</span></button>
					</span>
				</div>
			</div>
		</div>
	</form>
				<div class="row" id="mainrow">
				<div class="col-xs-12 col-md-7 col-lg-8">
					<div id="map_canvas"></div>						<div class="banner-ad-container">
								<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
	<!-- Responsive ad unit -->
	<ins class="adsbygoogle banner-ad-unit"
		style="display:inline-block;"
		data-ad-client="ca-pub-0709341197255740"
		data-ad-slot="9012842496"
		data-ad-format="horizontal"></ins>
	<script>
		(adsbygoogle = window.adsbygoogle || []).push({});
	</script>
							</div>
													<script>
								map_control_html = '<i class="fa fa-print" aria-hidden="true"></i> Print Map';
								map_control_onclick = function () {
									updateBounds();
									$('#printModal').modal('show');
									return false;
								}
							</script>
							<script>
								function updateBounds() {
									var b = map.getBounds();
									$('#ne').val(b.getNorthEast().toString());
									$('#sw').val(b.getSouthWest().toString());
								}
							</script>

							<!-- Modal -->
							<div class="modal fade" id="printModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
								<div class="modal-dialog">
									<div class="modal-content">
										<form role="form" action="/print_this_map.php" method="post" target="_blank">
											<div class="modal-header">
												<button type="button" class="close" data-dismiss="modal">
													<span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
												<h4 class="modal-title" id="myModalLabel">Print Map</h4>
											</div>
											<div class="modal-body">
												<p>Please make sure you have panned and zoomed to the area that you
													would like to have printed using the map on the page. After it shows
													the area that you are interested in, select from the options below
													to print your map.</p>

												<div class="row">
													<div class="col-xs-12">
														<input type="hidden" name="ne" id="ne">
														<input type="hidden" name="sw" id="sw">

														<div class="row">
															<div class="col-xs-12 col-sm-4">
																<label for="print_state" class="">State</label>
															</div>

															<div class="col-xs-12 col-sm-8">
																<select class="form-control" name="state" id="print_state">
																																			<option value="AL" >Alabama</option>
																																				<option value="AK" >Alaska</option>
																																				<option value="AZ" >Arizona</option>
																																				<option value="AR" >Arkansas</option>
																																				<option value="CA" selected>California</option>
																																				<option value="CO" >Colorado</option>
																																				<option value="CT" >Connecticut</option>
																																				<option value="DE" >Delaware</option>
																																				<option value="FL" >Florida</option>
																																				<option value="GA" >Georgia</option>
																																				<option value="HI" >Hawaii</option>
																																				<option value="ID" >Idaho</option>
																																				<option value="IL" >Illinois</option>
																																				<option value="IN" >Indiana</option>
																																				<option value="IA" >Iowa</option>
																																				<option value="KS" >Kansas</option>
																																				<option value="KY" >Kentucky</option>
																																				<option value="LA" >Louisiana</option>
																																				<option value="ME" >Maine</option>
																																				<option value="MD" >Maryland</option>
																																				<option value="MA" >Massachusetts</option>
																																				<option value="MI" >Michigan</option>
																																				<option value="MN" >Minnesota</option>
																																				<option value="MS" >Mississippi</option>
																																				<option value="MO" >Missouri</option>
																																				<option value="MT" >Montana</option>
																																				<option value="NE" >Nebraska</option>
																																				<option value="NV" >Nevada</option>
																																				<option value="NH" >New Hampshire</option>
																																				<option value="NJ" >New Jersey</option>
																																				<option value="NM" >New Mexico</option>
																																				<option value="NY" >New York</option>
																																				<option value="NC" >North Carolina</option>
																																				<option value="ND" >North Dakota</option>
																																				<option value="OH" >Ohio</option>
																																				<option value="OK" >Oklahoma</option>
																																				<option value="OR" >Oregon</option>
																																				<option value="PA" >Pennsylvania</option>
																																				<option value="PR" >Puerto Rico</option>
																																				<option value="RI" >Rhode Island</option>
																																				<option value="SC" >South Carolina</option>
																																				<option value="SD" >South Dakota</option>
																																				<option value="TN" >Tennessee</option>
																																				<option value="TX" >Texas</option>
																																				<option value="UT" >Utah</option>
																																				<option value="VT" >Vermont</option>
																																				<option value="VA" >Virginia</option>
																																				<option value="WA" >Washington</option>
																																				<option value="DC" >Washington, DC</option>
																																				<option value="WV" >West Virginia</option>
																																				<option value="WI" >Wisconsin</option>
																																				<option value="WY" >Wyoming</option>
																																		</select>
															</div>
														</div>

														<h3>Page Orientation</h3>

														<div class="radio">
															<label>
																<input type="radio" name="orientation" value="portrait" checked>
																<span>Portrait</span>
																<div class="thumb"><img src="/images/portrait.cache_extend.1483653703.png"></div>
															</label>
														</div>
														<div class="radio">
															<label>
																<input type="radio" name="orientation" value="landscape">
																<span>Landscape</span>
																<div class="thumb"><img src="/images/landscape.cache_extend.1483653703.png"></div>
															</label>
														</div>
														<div class="radio disabled">
															<label>
																<input type="radio" name="orientation" value="current view only">
																<span>Current View Only</span>
																<div class="thumb"><img src="/images/current-view-only.cache_extend.1483653703.png"></div>
															</label>
														</div>
													</div>
												</div>
											</div>
											<div class="modal-footer">
												<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
												<button type="submit" class="btn btn-primary">Print</button>
											</div>
										</form>
									</div>
								</div>
							</div>
											</div>

				<div class="col-xs-12 col-md-5 col-lg-4" id="map-info">
					<h1 style='text-align: center; margin-top: 10px'>ZIP Code 94937</h1><div style='text-align: center; padding: 4px 0; margin-bottom: 5px; background-color: #a2aebb; border-radius: 4px'><a href="#stats" class="btn btn-default"><i class="fa fa-users" aria-hidden="true"></i> Population</a><a href="#real-estate" class="btn btn-default"><i class="fa fa-home" aria-hidden="true"></i> Real Estate</a><span class='visible-md visible-lg'></span><a href="#employment" class="btn btn-default"><i class="fa fa-usd" aria-hidden="true"></i> Employment</a><a href="#schools" class="btn btn-default"><i class="fa fa-graduation-cap" aria-hidden="true"></i> Schools</a></div>					<table class="table table-condensed table-striped" style="margin-bottom: 5px">
						<tbody>
						<tr><th>Primary City:</th><td>Inverness, CA (<a href="#cities">View All Cities</a>)</td></tr><tr><th>County: </th><td>Marin County</td></tr><tr><th>Timezone: </th><td>Pacific (1:44pm)</td></tr><tr><th>Coordinates:</th><td>38.1, -122.9<br>ZIP (~11 mile radius)</td></tr></td></tr>
						</tbody>
					</table>

					<div  style="margin-right: -3px">
						<div class="banner-ad-container">
							<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
							<!-- 300x250, general purpose for url channels created 1/20/11 -->
							<ins class="adsbygoogle"
								style="display:inline-block;width:300px;height:250px"
								data-ad-client="ca-pub-0709341197255740"
								data-ad-slot="2396333505"></ins>
							<script>
								(adsbygoogle = window.adsbygoogle || []).push({});
							</script>
						</div>
					</div>
				</div>
			</div>

			<a name=cities></a><h2>Cities in ZIP code 94937</h2><p>The cities below are at least partially located in ZIP code 94937. In addition to the primary city for a ZIP code,
						USPS also publishes a list of other acceptable cities that can be used with ZIP code 94937. However, if you are mailing something
						to ZIP code 94937, you should not use any of the cities listed as unacceptable. Choose from the primary or acceptable cities when mailing
						your package or letter.</p>					<dl class="dl-horizontal">
						<dt>Primary city:</dt>
						<dd>Inverness, CA</dd>

						
											</dl>
					<a name=stats></a><h2>Stats and Demographics for the 94937 ZIP Code</h2><p>ZIP code 94937 is located in west <a href="/ca/">California</a> and covers a slightly less than average land area compared to other ZIP codes in the United States. It also has a slightly less than average population density. </p><p>The people living in ZIP code 94937 are primarily white. The number of middle aged adults is extremely large while the number of seniors is extremely large. There are also an extremely large number of single adults and a small number of single parents. The percentage of children under 18 living in the 94937 ZIP code is extremely small compared to other areas of the country. </p>
	<div class="row">
		<div class="col-xs-12 col-sm-6">
			<table class="table table-hover">
				<tbody>
				<tr>
					<th>Population</th>
					<td class="text-right">837</td>
					<td style="width: 106px;"></td>
				</tr>

				<tr>
					<th>Population Density</th>
					<td class="text-right">20</td>
					<td style="text-align: right; white-space: nowrap;"><small>people per sq mi</small></td>
				</tr>
				<tr>
					<th>Housing Units</th>
					<td class="text-right">762</td>
					<td></td>
				</tr>
									<tr>
						<th>Median Home Value</th>
						<td class="text-right">$1,000,001</td>
						<td></td>
					</tr>
								</tbody>
			</table>
		</div>

		<div class="col-xs-12 col-sm-6">
			<table class="table table-hover">
				<tbody>
				<tr>
					<th>Land Area</th>
					<td class="text-right">41.60</td>
					<td style="width: 106px;"><small>sq mi</small></td>
				</tr>

				<tr>
					<th>Water Area</th>
					<td class="text-right">11.31</td>
					<td><small>sq mi</small></td>
				</tr>

				<tr>
					<th>Occupied Housing Units</th>
					<td class="text-right">426</td>
					<td></td>
				</tr>
									<tr>
						<th>Median Household Income</th>
						<td class="text-right">$50,045</td>
						<td></td>
					</tr>
								</tbody>
			</table>
		</div>


		<div class="col-xs-12">
			<div class="banner-ad-container">
					<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
	<!-- Responsive ad unit -->
	<ins class="adsbygoogle banner-ad-unit"
		style="display:inline-block;"
		data-ad-client="ca-pub-0709341197255740"
		data-ad-slot="9012842496"
		data-ad-format="auto"></ins>
	<script>
		(adsbygoogle = window.adsbygoogle || []).push({});
	</script>
				</div>
		</div>
	</div>





			<div class="well well-sm chart-section">
			<h3>Estimated Population over Time</h3>
			<div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="LineChart0" class="LineChart"></svg></div></div></div>		</div>
			<div class="well well-sm chart-section">
		<h3>Total Population by Age</h3>
		<center><table cellspacing=0 class=slightly_padded style="font-weight: bold; margin: 0 auto" align=center><tr><td>Median Age: </td><td align=right>55</td><td width=50></td><td>Male Median Age: </td><td align=right>55</td><td width=50></td><td>Female Median Age: </td><td align=right>54</td><td width=50></td></tr></table></center><br><div style="text-align:center;"><div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="LineChart1" class="LineChart"></svg></div></div></div></div>		<div class="too-wide">
			<table cellspacing=0 class=lined style="font-size: 11px; width: 100%"><tr class=header_row><td></td><td align=right>Under 5</td><td align=right>5-9</td><td align=right>10-14</td><td align=right>15-19</td><td align=right>20-24</td><td align=right>25-29</td><td align=right>30-34</td><td align=right>35-39</td><td align=right>40-44</td><td align=right>45-49</td><td align=right>50-54</td><td align=right>55-59</td><td align=right>60-64</td><td align=right>65-69</td><td align=right>70-74</td><td align=right>75-79</td><td align=right>80-84</td><td align=right>85 Plus</td></tr><tr><td>Male</td><td align=right>10</td><td align=right>10</td><td align=right>17</td><td align=right>15</td><td align=right>5</td><td align=right>10</td><td align=right>16</td><td align=right>21</td><td align=right>27</td><td align=right>30</td><td align=right>34</td><td align=right>34</td><td align=right>59</td><td align=right>34</td><td align=right>32</td><td align=right>12</td><td align=right>9</td><td align=right>10</td></tr><tr><td>Female</td><td align=right>17</td><td align=right>18</td><td align=right>15</td><td align=right>17</td><td align=right>14</td><td align=right>11</td><td align=right>29</td><td align=right>24</td><td align=right>24</td><td align=right>30</td><td align=right>32</td><td align=right>39</td><td align=right>73</td><td align=right>44</td><td align=right>31</td><td align=right>11</td><td align=right>12</td><td align=right>11</td></tr><tr><td>Total</td><td align=right>27</td><td align=right>28</td><td align=right>32</td><td align=right>32</td><td align=right>19</td><td align=right>21</td><td align=right>45</td><td align=right>45</td><td align=right>51</td><td align=right>60</td><td align=right>66</td><td align=right>73</td><td align=right>132</td><td align=right>78</td><td align=right>63</td><td align=right>23</td><td align=right>21</td><td align=right>21</td></tr></table>		</div>
	</div>
	
		<div class="well well-sm chart-section">
							<div class="row">
		<div class="col-xs-12">
			<h3>Gender</h3>
		</div>
	</div>

	<div class="row pie-chart-section">
		<div class="col-xs-12 col-sm-4 text-center">
			<div class="pie-chart text-center">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer" style='padding-bottom: 100%'><div class="D3SizingContainer"><svg id="PieChart0" class="PieChart"></svg></div></div></div>			</div>
		</div>

		<div class="col-xs-12 col-sm-8">
			<table class="chart-legend table table-striped table-hover table-condensed">
								<tbody>
									<tr>
						<th data-color="#1f77b4"><span class="legend-color" style="background-color: #1f77b4;"></span>&nbsp;<span class="legend-label">Male</span></th>
						<td class="text-right"><span class="value">385</span></td>
						<td class="text-right">46&percnt;</td>
					</tr>
									<tr>
						<th data-color="#aec7e8"><span class="legend-color" style="background-color: #aec7e8;"></span>&nbsp;<span class="legend-label">Female</span></th>
						<td class="text-right"><span class="value">452</span></td>
						<td class="text-right">54&percnt;</td>
					</tr>
								</tbody>
				<caption>Gender</caption>
			</table>
		</div>
	</div>
			</div>

		<div class="well well-sm chart-section">
							<div class="row">
		<div class="col-xs-12">
			<h3>Race</h3>
		</div>
	</div>

	<div class="row pie-chart-section">
		<div class="col-xs-12 col-sm-4 text-center">
			<div class="pie-chart text-center">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer" style='padding-bottom: 100%'><div class="D3SizingContainer"><svg id="PieChart1" class="PieChart"></svg></div></div></div>			</div>
		</div>

		<div class="col-xs-12 col-sm-8">
			<table class="chart-legend table table-striped table-hover table-condensed">
								<tbody>
									<tr>
						<th data-color="#1f77b4"><span class="legend-color" style="background-color: #1f77b4;"></span>&nbsp;<span class="legend-label">White</span></th>
						<td class="text-right"><span class="value">729</span></td>
						<td class="text-right">87.1&percnt;</td>
					</tr>
									<tr>
						<th data-color="#aec7e8"><span class="legend-color" style="background-color: #aec7e8;"></span>&nbsp;<span class="legend-label">Black Or African American</span></th>
						<td class="text-right"><span class="value">9</span></td>
						<td class="text-right">1.1&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ff7f0e"><span class="legend-color" style="background-color: #ff7f0e;"></span>&nbsp;<span class="legend-label">American Indian Or Alaskan Native</span></th>
						<td class="text-right"><span class="value">2</span></td>
						<td class="text-right">0.2&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ffbb78"><span class="legend-color" style="background-color: #ffbb78;"></span>&nbsp;<span class="legend-label">Asian</span></th>
						<td class="text-right"><span class="value">10</span></td>
						<td class="text-right">1.2&percnt;</td>
					</tr>
									<tr>
						<th data-color="#2ca02c"><span class="legend-color" style="background-color: #2ca02c;"></span>&nbsp;<span class="legend-label">Native Hawaiian & Other Pacific Islander</span></th>
						<td class="text-right"><span class="value">2</span></td>
						<td class="text-right">0.2&percnt;</td>
					</tr>
									<tr>
						<th data-color="#98df8a"><span class="legend-color" style="background-color: #98df8a;"></span>&nbsp;<span class="legend-label">Other Race</span></th>
						<td class="text-right"><span class="value">64</span></td>
						<td class="text-right">7.6&percnt;</td>
					</tr>
									<tr>
						<th data-color="#d62728"><span class="legend-color" style="background-color: #d62728;"></span>&nbsp;<span class="legend-label">Two Or More Races</span></th>
						<td class="text-right"><span class="value">21</span></td>
						<td class="text-right">2.5&percnt;</td>
					</tr>
								</tbody>
				<caption>Race</caption>
			</table>
		</div>
	</div>
			</div>

			<div class="well well-sm chart-section">
		<h3>Head of Household by Age</h3>
		<div style="text-align:center;"><div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="LineChart2" class="LineChart"></svg></div></div></div></div>		<div class="too-wide">
			<table cellspacing=0 class=lined style="font-size: 11px; width: 100%"><tr class=header_row><td></td><td align=right>15-24</td><td align=right>25-34</td><td align=right>35-44</td><td align=right>45-54</td><td align=right>55-64</td><td align=right>65-74</td><td align=right>75-84</td><td align=right>85 Plus</td></tr><tr><td>Owner</td><td align=right>1</td><td align=right>3</td><td align=right>11</td><td align=right>27</td><td align=right>72</td><td align=right>82</td><td align=right>27</td><td align=right>12</td></tr><tr><td>Renter</td><td align=right>1</td><td align=right>28</td><td align=right>37</td><td align=right>50</td><td align=right>53</td><td align=right>14</td><td align=right>4</td><td align=right>4</td></tr><tr><td>Total</td><td align=right>2</td><td align=right>31</td><td align=right>48</td><td align=right>77</td><td align=right>125</td><td align=right>96</td><td align=right>31</td><td align=right>16</td></tr></table>		</div>
	</div>
	
					<div class="well well-sm chart-section">
									<div class="row">
		<div class="col-xs-12">
			<h3>Families vs Singles</h3>
		</div>
	</div>

	<div class="row pie-chart-section">
		<div class="col-xs-12 col-sm-4 text-center">
			<div class="pie-chart text-center">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer" style='padding-bottom: 100%'><div class="D3SizingContainer"><svg id="PieChart2" class="PieChart"></svg></div></div></div>			</div>
		</div>

		<div class="col-xs-12 col-sm-8">
			<table class="chart-legend table table-striped table-hover table-condensed">
								<tbody>
									<tr>
						<th data-color="#1f77b4"><span class="legend-color" style="background-color: #1f77b4;"></span>&nbsp;<span class="legend-label">Husband Wife Family Households</span></th>
						<td class="text-right"><span class="value">197</span></td>
						<td class="text-right">46&percnt;</td>
					</tr>
									<tr>
						<th data-color="#aec7e8"><span class="legend-color" style="background-color: #aec7e8;"></span>&nbsp;<span class="legend-label">Single Guardian</span></th>
						<td class="text-right"><span class="value">26</span></td>
						<td class="text-right">6&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ff7f0e"><span class="legend-color" style="background-color: #ff7f0e;"></span>&nbsp;<span class="legend-label">Singles</span></th>
						<td class="text-right"><span class="value">165</span></td>
						<td class="text-right">39&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ffbb78"><span class="legend-color" style="background-color: #ffbb78;"></span>&nbsp;<span class="legend-label">Singles With Roommate</span></th>
						<td class="text-right"><span class="value">38</span></td>
						<td class="text-right">9&percnt;</td>
					</tr>
								</tbody>
				<caption>Families vs Singles</caption>
			</table>
		</div>
	</div>
				</div>
		
					<div class="well well-sm chart-section">
									<div class="row">
		<div class="col-xs-12">
			<h3>Households with Kids</h3>
		</div>
	</div>

	<div class="row pie-chart-section">
		<div class="col-xs-12 col-sm-4 text-center">
			<div class="pie-chart text-center">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer" style='padding-bottom: 100%'><div class="D3SizingContainer"><svg id="PieChart3" class="PieChart"></svg></div></div></div>			</div>
		</div>

		<div class="col-xs-12 col-sm-8">
			<table class="chart-legend table table-striped table-hover table-condensed">
									<thead>
													<tr>
								<th colspan="3">
									Average Household Size: 2								</th>
							</tr>
											</thead>
								<tbody>
									<tr>
						<th data-color="#1f77b4"><span class="legend-color" style="background-color: #1f77b4;"></span>&nbsp;<span class="legend-label">Households without Kids</span></th>
						<td class="text-right"><span class="value">359</span></td>
						<td class="text-right">84&percnt;</td>
					</tr>
									<tr>
						<th data-color="#aec7e8"><span class="legend-color" style="background-color: #aec7e8;"></span>&nbsp;<span class="legend-label">Households with Kids</span></th>
						<td class="text-right"><span class="value">67</span></td>
						<td class="text-right">16&percnt;</td>
					</tr>
								</tbody>
				<caption>Households with Kids</caption>
			</table>
		</div>
	</div>
				</div>
		


			<div class="well well-sm chart-section">
		<h3>Children by Age</h3>
		<div style="text-align:center;"><div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="LineChart3" class="LineChart"></svg></div></div></div></div>		<div class="too-wide">
			<table cellspacing=0 class=lined style="font-size: 11px; width: 100%"><tr class=header_row><td></td><td align=right>1</td><td align=right>2</td><td align=right>3</td><td align=right>4</td><td align=right>5</td><td align=right>6</td><td align=right>7</td><td align=right>8</td><td align=right>9</td><td align=right>10</td><td align=right>11</td><td align=right>12</td><td align=right>13</td><td align=right>14</td><td align=right>15</td><td align=right>16</td><td align=right>17</td><td align=right>18</td><td align=right>19</td><td align=right>20</td></tr><tr><td>Male</td><td align=right>2</td><td align=right>2</td><td align=right>3</td><td align=right>2</td><td align=right>4</td><td align=right>2</td><td align=right>3</td><td align=right>1</td><td align=right>0</td><td align=right>2</td><td align=right>3</td><td align=right>5</td><td align=right>4</td><td align=right>3</td><td align=right>4</td><td align=right>1</td><td align=right>5</td><td align=right>2</td><td align=right>3</td><td align=right>1</td></tr><tr><td>Female</td><td align=right>3</td><td align=right>6</td><td align=right>3</td><td align=right>2</td><td align=right>4</td><td align=right>2</td><td align=right>4</td><td align=right>3</td><td align=right>5</td><td align=right>5</td><td align=right>2</td><td align=right>3</td><td align=right>2</td><td align=right>3</td><td align=right>3</td><td align=right>6</td><td align=right>5</td><td align=right>1</td><td align=right>2</td><td align=right>3</td></tr><tr><td>Total</td><td align=right>5</td><td align=right>8</td><td align=right>6</td><td align=right>4</td><td align=right>8</td><td align=right>4</td><td align=right>7</td><td align=right>4</td><td align=right>5</td><td align=right>7</td><td align=right>5</td><td align=right>8</td><td align=right>6</td><td align=right>6</td><td align=right>7</td><td align=right>7</td><td align=right>10</td><td align=right>3</td><td align=right>5</td><td align=right>4</td></tr></table>		</div>
	</div>
		<h2 id="real-estate">Real Estate and Housing</h2>

	<p>ZIP code 94937 has an extremely large percentage of vacancies. </p><p>The majority of household are vacant. Homes in ZIP code 94937 were primarily built in the 1970s. Looking at 94937 real estate data, the median home value of $1,000,001 is extremely high compared to the rest of the country. It is also extremely high compared to nearby ZIP codes. So you are less likely to find inexpensive homes in 94937. Rentals in 94937 are most commonly 3+ bedrooms. The rent for 3+ bedrooms is normally $1,000+/month including utilities. Prices for rental property include ZIP code 94937 apartments, townhouses, and homes that are primary residences. </p>		<div class="well well-sm chart-section">
							<div class="row">
		<div class="col-xs-12">
			<h3>Housing Type</h3>
		</div>
	</div>

	<div class="row pie-chart-section">
		<div class="col-xs-12 col-sm-4 text-center">
			<div class="pie-chart text-center">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer" style='padding-bottom: 100%'><div class="D3SizingContainer"><svg id="PieChart4" class="PieChart"></svg></div></div></div>			</div>
		</div>

		<div class="col-xs-12 col-sm-8">
			<table class="chart-legend table table-striped table-hover table-condensed">
								<tbody>
									<tr>
						<th data-color="#1f77b4"><span class="legend-color" style="background-color: #1f77b4;"></span>&nbsp;<span class="legend-label">In Occupied Housing Units</span></th>
						<td class="text-right"><span class="value">837</span></td>
						<td class="text-right">100&percnt;</td>
					</tr>
									<tr>
						<th data-color="#aec7e8"><span class="legend-color" style="background-color: #aec7e8;"></span>&nbsp;<span class="legend-label">Correctional Facility For Adults</span></th>
						<td class="text-right"><span class="value">0</span></td>
						<td class="text-right">0&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ff7f0e"><span class="legend-color" style="background-color: #ff7f0e;"></span>&nbsp;<span class="legend-label">Juvenile Facilities</span></th>
						<td class="text-right"><span class="value">0</span></td>
						<td class="text-right">0&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ffbb78"><span class="legend-color" style="background-color: #ffbb78;"></span>&nbsp;<span class="legend-label">Nursing Facilities</span></th>
						<td class="text-right"><span class="value">0</span></td>
						<td class="text-right">0&percnt;</td>
					</tr>
									<tr>
						<th data-color="#2ca02c"><span class="legend-color" style="background-color: #2ca02c;"></span>&nbsp;<span class="legend-label">Other Institutional</span></th>
						<td class="text-right"><span class="value">0</span></td>
						<td class="text-right">0&percnt;</td>
					</tr>
									<tr>
						<th data-color="#98df8a"><span class="legend-color" style="background-color: #98df8a;"></span>&nbsp;<span class="legend-label">College Student Housing</span></th>
						<td class="text-right"><span class="value">0</span></td>
						<td class="text-right">0&percnt;</td>
					</tr>
									<tr>
						<th data-color="#d62728"><span class="legend-color" style="background-color: #d62728;"></span>&nbsp;<span class="legend-label">Military Quarters</span></th>
						<td class="text-right"><span class="value">0</span></td>
						<td class="text-right">0&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ff9896"><span class="legend-color" style="background-color: #ff9896;"></span>&nbsp;<span class="legend-label">Other Noninstitutional</span></th>
						<td class="text-right"><span class="value">0</span></td>
						<td class="text-right">0&percnt;</td>
					</tr>
								</tbody>
				<caption>Housing Type</caption>
			</table>
		</div>
	</div>
			</div>
				<div class="well well-sm chart-section">
			<h3>Year Housing was Built</h3>
			<div style="text-align:center;">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart0" class="BarChart"></svg></div></div></div>			</div>
		</div>
				<div class="well well-sm chart-section">
							<div class="row">
		<div class="col-xs-12">
			<h3>Housing Occupancy</h3>
		</div>
	</div>

	<div class="row pie-chart-section">
		<div class="col-xs-12 col-sm-4 text-center">
			<div class="pie-chart text-center">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer" style='padding-bottom: 100%'><div class="D3SizingContainer"><svg id="PieChart5" class="PieChart"></svg></div></div></div>			</div>
		</div>

		<div class="col-xs-12 col-sm-8">
			<table class="chart-legend table table-striped table-hover table-condensed">
								<tbody>
									<tr>
						<th data-color="#1f77b4"><span class="legend-color" style="background-color: #1f77b4;"></span>&nbsp;<span class="legend-label">Owned Households With A Mortgage</span></th>
						<td class="text-right"><span class="value">126</span></td>
						<td class="text-right">17&percnt;</td>
					</tr>
									<tr>
						<th data-color="#aec7e8"><span class="legend-color" style="background-color: #aec7e8;"></span>&nbsp;<span class="legend-label">Owned Households Free & Clear</span></th>
						<td class="text-right"><span class="value">109</span></td>
						<td class="text-right">14&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ff7f0e"><span class="legend-color" style="background-color: #ff7f0e;"></span>&nbsp;<span class="legend-label">Renter Occupied Households</span></th>
						<td class="text-right"><span class="value">191</span></td>
						<td class="text-right">25&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ffbb78"><span class="legend-color" style="background-color: #ffbb78;"></span>&nbsp;<span class="legend-label">Households Vacant</span></th>
						<td class="text-right"><span class="value">336</span></td>
						<td class="text-right">44&percnt;</td>
					</tr>
								</tbody>
				<caption>Housing Occupancy</caption>
			</table>
		</div>
	</div>
			</div>
	
			<div class="well well-sm chart-section">
							<div class="row">
		<div class="col-xs-12">
			<h3>Vacancy Reasons</h3>
		</div>
	</div>

	<div class="row pie-chart-section">
		<div class="col-xs-12 col-sm-4 text-center">
			<div class="pie-chart text-center">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer" style='padding-bottom: 100%'><div class="D3SizingContainer"><svg id="PieChart6" class="PieChart"></svg></div></div></div>			</div>
		</div>

		<div class="col-xs-12 col-sm-8">
			<table class="chart-legend table table-striped table-hover table-condensed">
								<tbody>
									<tr>
						<th data-color="#1f77b4"><span class="legend-color" style="background-color: #1f77b4;"></span>&nbsp;<span class="legend-label">For Rent</span></th>
						<td class="text-right"><span class="value">18</span></td>
						<td class="text-right">5.4&percnt;</td>
					</tr>
									<tr>
						<th data-color="#aec7e8"><span class="legend-color" style="background-color: #aec7e8;"></span>&nbsp;<span class="legend-label">Rented & Unoccupied</span></th>
						<td class="text-right"><span class="value">0</span></td>
						<td class="text-right">0.0&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ff7f0e"><span class="legend-color" style="background-color: #ff7f0e;"></span>&nbsp;<span class="legend-label">For Sale Only</span></th>
						<td class="text-right"><span class="value">8</span></td>
						<td class="text-right">2.4&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ffbb78"><span class="legend-color" style="background-color: #ffbb78;"></span>&nbsp;<span class="legend-label">Sold & Unoccupied</span></th>
						<td class="text-right"><span class="value">2</span></td>
						<td class="text-right">0.6&percnt;</td>
					</tr>
									<tr>
						<th data-color="#2ca02c"><span class="legend-color" style="background-color: #2ca02c;"></span>&nbsp;<span class="legend-label">For Season Recreational Or Occasional Use</span></th>
						<td class="text-right"><span class="value">289</span></td>
						<td class="text-right">86.0&percnt;</td>
					</tr>
									<tr>
						<th data-color="#98df8a"><span class="legend-color" style="background-color: #98df8a;"></span>&nbsp;<span class="legend-label">For Migrant Workers</span></th>
						<td class="text-right"><span class="value">7</span></td>
						<td class="text-right">2.1&percnt;</td>
					</tr>
									<tr>
						<th data-color="#d62728"><span class="legend-color" style="background-color: #d62728;"></span>&nbsp;<span class="legend-label">Vacant For Other Reasons</span></th>
						<td class="text-right"><span class="value">12</span></td>
						<td class="text-right">3.6&percnt;</td>
					</tr>
								</tbody>
				<caption>Vacancy Reasons</caption>
			</table>
		</div>
	</div>
			</div>
	
			<div class="well well-sm chart-section">
			<h3>Owner Occupied Home Values</h3>
			<div style="text-align:center;">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart1" class="BarChart"></svg></div></div></div>			</div>
		</div>
				<div class="well well-sm chart-section">
							<div class="row">
		<div class="col-xs-12">
			<h3>Rental Properties by Number of Rooms</h3>
		</div>
	</div>

	<div class="row pie-chart-section">
		<div class="col-xs-12 col-sm-4 text-center">
			<div class="pie-chart text-center">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer" style='padding-bottom: 100%'><div class="D3SizingContainer"><svg id="PieChart7" class="PieChart"></svg></div></div></div>			</div>
		</div>

		<div class="col-xs-12 col-sm-8">
			<table class="chart-legend table table-striped table-hover table-condensed">
								<tbody>
									<tr>
						<th data-color="#1f77b4"><span class="legend-color" style="background-color: #1f77b4;"></span>&nbsp;<span class="legend-label">Studio Apartment</span></th>
						<td class="text-right"><span class="value">13</span></td>
						<td class="text-right">4&percnt;</td>
					</tr>
									<tr>
						<th data-color="#aec7e8"><span class="legend-color" style="background-color: #aec7e8;"></span>&nbsp;<span class="legend-label">1 Bedroom</span></th>
						<td class="text-right"><span class="value">59</span></td>
						<td class="text-right">20&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ff7f0e"><span class="legend-color" style="background-color: #ff7f0e;"></span>&nbsp;<span class="legend-label">2 Bedroom</span></th>
						<td class="text-right"><span class="value">90</span></td>
						<td class="text-right">30&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ffbb78"><span class="legend-color" style="background-color: #ffbb78;"></span>&nbsp;<span class="legend-label">3+ Bedroom</span></th>
						<td class="text-right"><span class="value">138</span></td>
						<td class="text-right">46&percnt;</td>
					</tr>
								</tbody>
				<caption>Rental Properties by Number of Rooms</caption>
			</table>
		</div>
	</div>
			</div>
	
				<div class="well well-sm chart-section">
			<h3>Cost of Monthly Rent Including Utilities</h3>
			<div class="row">
									<div class="col-xs-12 col-md-6" style="text-align:center;">
						<h4>Cost of a Studio Apartment</h4><div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart2" class="BarChart"></svg></div></div></div>					</div>
									<div class="col-xs-12 col-md-6" style="text-align:center;">
						<h4>Cost of a 1 Bedroom</h4><div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart3" class="BarChart"></svg></div></div></div>					</div>
									<div class="col-xs-12 col-md-6" style="text-align:center;">
						<h4>Cost of a 2 Bedroom</h4><div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart4" class="BarChart"></svg></div></div></div>					</div>
									<div class="col-xs-12 col-md-6" style="text-align:center;">
						<h4>Cost of a 3+ Bedroom</h4><div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart5" class="BarChart"></svg></div></div></div>					</div>
							</div>
		</div>
		


	<h2 id="employment">Employment, Income, Earnings, and Work</h2>
	<p>The median household income of $50,045 is  compared to the rest of the country. It is also  compared to nearby ZIP codes. While money isn't everything, ZIP code 94937 may not be as nice as other parts of town. </p><p>As with most parts of the country, vehicles are the most common form of transportation to places of employment. If you are a person that likes walking or biking to work, it will be a comfort for you to know that 94937 has a well above average number of people who do not use a vehicle to commute. A higher percentage of people in 94937 than almost anywhere in the country avoid a commute altogether by working at home. In most parts of the country, the majority of commuters get to work in under half an hour. More commuters in 94937 get to experience these short commute times than most other ZIP codes. Having to travel to work for over 45 minutes isn't uncommon for people who live here. </p>		<div class="well well-sm chart-section">
							<div class="row">
		<div class="col-xs-12">
			<h3>Employment Status</h3>
		</div>
	</div>

	<div class="row pie-chart-section">
		<div class="col-xs-12 col-sm-4 text-center">
			<div class="pie-chart text-center">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer" style='padding-bottom: 100%'><div class="D3SizingContainer"><svg id="PieChart8" class="PieChart"></svg></div></div></div>			</div>
		</div>

		<div class="col-xs-12 col-sm-8">
			<table class="chart-legend table table-striped table-hover table-condensed">
								<tbody>
									<tr>
						<th data-color="#1f77b4"><span class="legend-color" style="background-color: #1f77b4;"></span>&nbsp;<span class="legend-label">Worked Full-time with Earnings</span></th>
						<td class="text-right"><span class="value">354</span></td>
						<td class="text-right">34&percnt;</td>
					</tr>
									<tr>
						<th data-color="#aec7e8"><span class="legend-color" style="background-color: #aec7e8;"></span>&nbsp;<span class="legend-label">Worked Part-time with Earnings</span></th>
						<td class="text-right"><span class="value">369</span></td>
						<td class="text-right">36&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ff7f0e"><span class="legend-color" style="background-color: #ff7f0e;"></span>&nbsp;<span class="legend-label">No Earnings</span></th>
						<td class="text-right"><span class="value">307</span></td>
						<td class="text-right">30&percnt;</td>
					</tr>
								</tbody>
				<caption>Employment Status</caption>
			</table>
		</div>
	</div>
			</div>
				<div class="well well-sm chart-section">
			<h3>Average Household Income over Time</h3>
			<div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="LineChart4" class="LineChart"></svg></div></div></div>		</div>
				<div class="well well-sm chart-section">
			<h3>Household Income</h3>
			<div style="text-align:center;">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart6" class="BarChart"></svg></div></div></div>			</div>
		</div>
				<div class="well well-sm chart-section">
			<h3>Annual Individual Earnings</h3>
			<div style="text-align:center;">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart7" class="BarChart"></svg></div></div></div>			</div>
		</div>
					<div class="well well-sm chart-section">
				<h3>Sources of Household Income</h3>
				<div class="row">
					<div class="col-xs-12 col-md-6">
						<h4>Percent of Households Receiving Income</h4>
						<div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart8" class="BarChart"></svg></div></div></div>					</div>
					<div class="col-xs-12 col-md-6">
						<h4>Average Income per Household by Income Source</h4>
						<div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart9" class="BarChart"></svg></div></div></div>					</div>
				</div>
				<p>* Only taxable income is reported.</p>
			</div>
			<div class="well well-sm chart-section">
				<h3>Household Investment Income</h3>
				<div class="row">
					<div class="col-xs-12 col-md-6">
						<h4>Percent of Households Receiving Investment Income</h4>
						<div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart10" class="BarChart"></svg></div></div></div>					</div>
					<div class="col-xs-12 col-md-6">
						<h4>Average Income per Household by Income Source</h4>
						<div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart11" class="BarChart"></svg></div></div></div>					</div>
				</div>
				<p>* Only taxable income is reported.</p>
			</div>
			<div class="well well-sm chart-section">
				<h3>Household Retirement Income</h3>
				<div class="row">
					<div class="col-xs-12 col-md-6">
						<h4>Percent of Households Receiving Retirement Income</h4>
						<div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart12" class="BarChart"></svg></div></div></div>					</div>
					<div class="col-xs-12 col-md-6">
						<h4>Average Income per Household by Income Source</h4>
						<div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart13" class="BarChart"></svg></div></div></div>					</div>
				</div>
				<p>* Only taxable income is reported.</p>
			</div>
					<div class="well well-sm chart-section">
							<div class="row">
		<div class="col-xs-12">
			<h3>Source of Earnings</h3>
		</div>
	</div>

	<div class="row pie-chart-section">
		<div class="col-xs-12 col-sm-4 text-center">
			<div class="pie-chart text-center">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer" style='padding-bottom: 100%'><div class="D3SizingContainer"><svg id="PieChart9" class="PieChart"></svg></div></div></div>			</div>
		</div>

		<div class="col-xs-12 col-sm-8">
			<table class="chart-legend table table-striped table-hover table-condensed">
								<tbody>
									<tr>
						<th data-color="#1f77b4"><span class="legend-color" style="background-color: #1f77b4;"></span>&nbsp;<span class="legend-label">Worked Full-time with Earnings</span></th>
						<td class="text-right"><span class="value">354</span></td>
						<td class="text-right">34&percnt;</td>
					</tr>
									<tr>
						<th data-color="#aec7e8"><span class="legend-color" style="background-color: #aec7e8;"></span>&nbsp;<span class="legend-label">Worked Part-time with Earnings</span></th>
						<td class="text-right"><span class="value">369</span></td>
						<td class="text-right">36&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ff7f0e"><span class="legend-color" style="background-color: #ff7f0e;"></span>&nbsp;<span class="legend-label">No Earnings</span></th>
						<td class="text-right"><span class="value">307</span></td>
						<td class="text-right">30&percnt;</td>
					</tr>
								</tbody>
				<caption>Source of Earnings</caption>
			</table>
		</div>
	</div>
			</div>
				<div class="well well-sm chart-section">
							<div class="row">
		<div class="col-xs-12">
			<h3>Means Of Transportation To Work for Workers 16 and Over</h3>
		</div>
	</div>

	<div class="row pie-chart-section">
		<div class="col-xs-12 col-sm-4 text-center">
			<div class="pie-chart text-center">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer" style='padding-bottom: 100%'><div class="D3SizingContainer"><svg id="PieChart10" class="PieChart"></svg></div></div></div>			</div>
		</div>

		<div class="col-xs-12 col-sm-8">
			<table class="chart-legend table table-striped table-hover table-condensed">
								<tbody>
									<tr>
						<th data-color="#1f77b4"><span class="legend-color" style="background-color: #1f77b4;"></span>&nbsp;<span class="legend-label">Car, truck, or van</span></th>
						<td class="text-right"><span class="value">401</span></td>
						<td class="text-right">64&percnt;</td>
					</tr>
									<tr>
						<th data-color="#aec7e8"><span class="legend-color" style="background-color: #aec7e8;"></span>&nbsp;<span class="legend-label">Public transportation</span></th>
						<td class="text-right"><span class="value">0</span></td>
						<td class="text-right">0&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ff7f0e"><span class="legend-color" style="background-color: #ff7f0e;"></span>&nbsp;<span class="legend-label">Taxicab</span></th>
						<td class="text-right"><span class="value">0</span></td>
						<td class="text-right">0&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ffbb78"><span class="legend-color" style="background-color: #ffbb78;"></span>&nbsp;<span class="legend-label">Motorcycle</span></th>
						<td class="text-right"><span class="value">0</span></td>
						<td class="text-right">0&percnt;</td>
					</tr>
									<tr>
						<th data-color="#2ca02c"><span class="legend-color" style="background-color: #2ca02c;"></span>&nbsp;<span class="legend-label">Bicycle, Walked, or Other Means</span></th>
						<td class="text-right"><span class="value">88</span></td>
						<td class="text-right">14&percnt;</td>
					</tr>
									<tr>
						<th data-color="#98df8a"><span class="legend-color" style="background-color: #98df8a;"></span>&nbsp;<span class="legend-label">Worked at Home</span></th>
						<td class="text-right"><span class="value">139</span></td>
						<td class="text-right">22&percnt;</td>
					</tr>
								</tbody>
				<caption>Means Of Transportation To Work for Workers 16 and Over</caption>
			</table>
		</div>
	</div>
			</div>
				<div class="well well-sm chart-section">
			<h3>Travel Time to Work (In Minutes)</h3>
			<div style="text-align:center;">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer"><div class="D3SizingContainer"><svg id="BarChart14" class="BarChart"></svg></div></div></div>			</div>
		</div>
		

	<h2 id="schools">Schools and Education</h2>
	The population has a much higher percentage of people with low education levels (less than high school) than normal. The area has some of the highest percentages of people who attended college of any ZIP. 		<div class="well well-sm chart-section">
							<div class="row">
		<div class="col-xs-12">
			<h3>Educational Attainment For The Population 25 Years And Over</h3>
		</div>
	</div>

	<div class="row pie-chart-section">
		<div class="col-xs-12 col-sm-4 text-center">
			<div class="pie-chart text-center">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer" style='padding-bottom: 100%'><div class="D3SizingContainer"><svg id="PieChart11" class="PieChart"></svg></div></div></div>			</div>
		</div>

		<div class="col-xs-12 col-sm-8">
			<table class="chart-legend table table-striped table-hover table-condensed">
								<tbody>
									<tr>
						<th data-color="#1f77b4"><span class="legend-color" style="background-color: #1f77b4;"></span>&nbsp;<span class="legend-label">Less than High School Diploma</span></th>
						<td class="text-right"><span class="value">41</span></td>
						<td class="text-right">11&percnt;</td>
					</tr>
									<tr>
						<th data-color="#aec7e8"><span class="legend-color" style="background-color: #aec7e8;"></span>&nbsp;<span class="legend-label">High School Graduate</span></th>
						<td class="text-right"><span class="value">163</span></td>
						<td class="text-right">46&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ff7f0e"><span class="legend-color" style="background-color: #ff7f0e;"></span>&nbsp;<span class="legend-label">Associate's degree</span></th>
						<td class="text-right"><span class="value">17</span></td>
						<td class="text-right">5&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ffbb78"><span class="legend-color" style="background-color: #ffbb78;"></span>&nbsp;<span class="legend-label">Bachelor's degree</span></th>
						<td class="text-right"><span class="value">53</span></td>
						<td class="text-right">15&percnt;</td>
					</tr>
									<tr>
						<th data-color="#2ca02c"><span class="legend-color" style="background-color: #2ca02c;"></span>&nbsp;<span class="legend-label">Master's degree</span></th>
						<td class="text-right"><span class="value">11</span></td>
						<td class="text-right">3&percnt;</td>
					</tr>
									<tr>
						<th data-color="#98df8a"><span class="legend-color" style="background-color: #98df8a;"></span>&nbsp;<span class="legend-label">Professional school degree</span></th>
						<td class="text-right"><span class="value">54</span></td>
						<td class="text-right">15&percnt;</td>
					</tr>
									<tr>
						<th data-color="#d62728"><span class="legend-color" style="background-color: #d62728;"></span>&nbsp;<span class="legend-label">Doctorate degree</span></th>
						<td class="text-right"><span class="value">18</span></td>
						<td class="text-right">5&percnt;</td>
					</tr>
								</tbody>
				<caption>Educational Attainment For The Population 25 Years And Over</caption>
			</table>
		</div>
	</div>
			</div>
				<div class="well well-sm chart-section">
							<div class="row">
		<div class="col-xs-12">
			<h3>School Enrollment (Ages 3 to 17)</h3>
		</div>
	</div>

	<div class="row pie-chart-section">
		<div class="col-xs-12 col-sm-4 text-center">
			<div class="pie-chart text-center">
				<div class="D3ChartOuterContainer"><div class="D3ChartContainer" style='padding-bottom: 100%'><div class="D3SizingContainer"><svg id="PieChart12" class="PieChart"></svg></div></div></div>			</div>
		</div>

		<div class="col-xs-12 col-sm-8">
			<table class="chart-legend table table-striped table-hover table-condensed">
								<tbody>
									<tr>
						<th data-color="#1f77b4"><span class="legend-color" style="background-color: #1f77b4;"></span>&nbsp;<span class="legend-label">Enrolled in Public School</span></th>
						<td class="text-right"><span class="value">99</span></td>
						<td class="text-right">100&percnt;</td>
					</tr>
									<tr>
						<th data-color="#aec7e8"><span class="legend-color" style="background-color: #aec7e8;"></span>&nbsp;<span class="legend-label">Enrolled in Private School</span></th>
						<td class="text-right"><span class="value">0</span></td>
						<td class="text-right">0&percnt;</td>
					</tr>
									<tr>
						<th data-color="#ff7f0e"><span class="legend-color" style="background-color: #ff7f0e;"></span>&nbsp;<span class="legend-label">Not Enrolled in School</span></th>
						<td class="text-right"><span class="value">0</span></td>
						<td class="text-right">0&percnt;</td>
					</tr>
								</tbody>
				<caption>School Enrollment (Ages 3 to 17)</caption>
			</table>
		</div>
	</div>
			</div>
								<h2>Schools in ZIP Code 94937</h2>

						<p>ZIP Code 94937 is in the Shoreline Unf School District. There are 1 different elementary schools and high schools with mailing addresses in ZIP code 94937. </p>

						<div class="row" style="margin-bottom: 1em;">
							<div class="col-xs-12 col-sm-6 col-md-4 col-md-offset-2">
								<a href="http://high-schools.com/data-request.html" target="_blank" class="btn btn-primary">Download a List of High Schools</a>
							</div>

							<div class="col-xs-12 col-sm-6 col-md-4">
								<a href="http://elementaryschools.org/data-request.html" target="_blank" class="btn btn-primary">Download a List of Elementary Schools</a>
							</div>
						</div>

						<div class="row">
							
								<div class="col-xs-12 col-sm-6 col-md-4">
									<div class="nearby-school">
										<strong><a href="//elementaryschools.org/directory/ca/cities/inverness/inverness-elementary/63667007362/" target="_blank">Inverness Elementary</a></strong><br />
										Bayview and Mesa<br />
										Inverness, CA 94937<br />
										Grade Level: Primary/Elementary<br />
										District: Shoreline Unf School District									</div>
								</div>

													</div>
												<div class="nearby-zips-list">
							<a name="nearby_zips"></a>
							<h2>Nearby ZIP Codes</h2>

							<ul class="list-unstyled nearby-zips-links clearfix">
																	<li>
										<div>
											<a href="/94929/">ZIP Code 94929</a><br />
											Dillon Beach, CA<br />
											Type: PO BOX<br />
										</div>
									</li>
																	<li>
										<div>
											<a href="/94940/">ZIP Code 94940</a><br />
											Marshall, CA<br />
											Type: Standard<br />
										</div>
									</li>
																	<li>
										<div>
											<a href="/94952/">ZIP Code 94952</a><br />
											Petaluma, CA<br />
											Type: Standard<br />
										</div>
									</li>
																	<li>
										<div>
											<a href="/94956/">ZIP Code 94956</a><br />
											Point Reyes Station, CA<br />
											Type: Standard<br />
										</div>
									</li>
																	<li>
										<div>
											<a href="/94971/">ZIP Code 94971</a><br />
											Tomales, CA<br />
											Type: PO BOX<br />
										</div>
									</li>
															</ul>
						</div>
												
				<div class="state-list">
					<a name="by_state"></a>
					<h2>Zip Codes by State</h2>
		
					<ul class="list-unstyled state-links">
													<li><a href="/al/">Alabama</a></li>
													<li><a href="/ak/">Alaska</a></li>
													<li><a href="/az/">Arizona</a></li>
													<li><a href="/ar/">Arkansas</a></li>
													<li><a href="/ca/">California</a></li>
													<li><a href="/co/">Colorado</a></li>
													<li><a href="/ct/">Connecticut</a></li>
													<li><a href="/de/">Delaware</a></li>
													<li><a href="/fl/">Florida</a></li>
													<li><a href="/ga/">Georgia</a></li>
													<li><a href="/hi/">Hawaii</a></li>
													<li><a href="/id/">Idaho</a></li>
													<li><a href="/il/">Illinois</a></li>
													<li><a href="/in/">Indiana</a></li>
													<li><a href="/ia/">Iowa</a></li>
													<li><a href="/ks/">Kansas</a></li>
													<li><a href="/ky/">Kentucky</a></li>
													<li><a href="/la/">Louisiana</a></li>
													<li><a href="/me/">Maine</a></li>
													<li><a href="/md/">Maryland</a></li>
													<li><a href="/ma/">Massachusetts</a></li>
													<li><a href="/mi/">Michigan</a></li>
													<li><a href="/mn/">Minnesota</a></li>
													<li><a href="/ms/">Mississippi</a></li>
													<li><a href="/mo/">Missouri</a></li>
													<li><a href="/mt/">Montana</a></li>
													<li><a href="/ne/">Nebraska</a></li>
													<li><a href="/nv/">Nevada</a></li>
													<li><a href="/nh/">New Hampshire</a></li>
													<li><a href="/nj/">New Jersey</a></li>
													<li><a href="/nm/">New Mexico</a></li>
													<li><a href="/ny/">New York</a></li>
													<li><a href="/nc/">North Carolina</a></li>
													<li><a href="/nd/">North Dakota</a></li>
													<li><a href="/oh/">Ohio</a></li>
													<li><a href="/ok/">Oklahoma</a></li>
													<li><a href="/or/">Oregon</a></li>
													<li><a href="/pa/">Pennsylvania</a></li>
													<li><a href="/pr/">Puerto Rico</a></li>
													<li><a href="/ri/">Rhode Island</a></li>
													<li><a href="/sc/">South Carolina</a></li>
													<li><a href="/sd/">South Dakota</a></li>
													<li><a href="/tn/">Tennessee</a></li>
													<li><a href="/tx/">Texas</a></li>
													<li><a href="/ut/">Utah</a></li>
													<li><a href="/vt/">Vermont</a></li>
													<li><a href="/va/">Virginia</a></li>
													<li><a href="/wa/">Washington</a></li>
													<li><a href="/dc/">Washington, DC</a></li>
													<li><a href="/wv/">West Virginia</a></li>
													<li><a href="/wi/">Wisconsin</a></li>
													<li><a href="/wy/">Wyoming</a></li>
											</ul>
				</div>

			</div>
		</div>
		<div class="row footer">
			<div class="col-xs-12">
				<div style="border-top: 1px solid #000000; margin-bottom: 15px"></div>
				<ul class="footer-nav">
					<li><a href="/">Home</a></li>
					<li><a href="http://www.allareacodes.com">Area Codes</a></li>
					<li><a href="/policies.php">Terms of Use &amp; Privacy Policy</a></li>
					<li><a href="/contact.php">Contact</a></li>
				</ul>

				<p>
					Data sources include the United States Postal Service, U.S. Census Bureau, Yahoo, Google, FedEx, and UPS.
				</p>

				<p>
					&copy; 2014 UnitedStatesZipCodes.org
				</p>

			</div>

		</div>
	</div>
</div>

<script src="/automin/c3e760580df33376710a33d338a84718ec31efd1.automin.cache_extend.1484767208.js"></script>
<script type="text/javascript" src="//www.google.com/jsapi"></script>


<!-- Piwik -->
<script type="text/javascript">
  var _paq = _paq || [];
  _paq.push(['trackPageView']);
  _paq.push(['enableLinkTracking']);
  (function() {
    var u=(("https:" == document.location.protocol) ? "https" : "http") + "://aatrk.com/stats/";
    _paq.push(['setTrackerUrl', u+'piwik.php']);
    _paq.push(['setSiteId', 29]);
    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0]; g.type='text/javascript';
    g.defer=true; g.async=true; g.src=u+'piwik.js'; s.parentNode.insertBefore(g,s);
  })();
</script>
<noscript><p><img src="http://aatrk.com/stats/piwik.php?idsite=29" style="border:0;" alt="" /></p></noscript>
<!-- End Piwik Code -->
<script src="/shared-assets/d3-3.5.9.min.cache_extend.1484595097.js" charset="utf-8"></script>
<script src="/shared-assets/nv.d3-1.8.1.min.cache_extend.1484595097.js"></script>
<script>
			var LineChart0_data;
			var LineChart0_chart;
			var LineChart0_svg;
			var LineChart0_x_annotations;
			var LineChart0_y_annotations;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":2005,"y":904},{"x":2006,"y":891},{"x":2007,"y":905},{"x":2008,"y":925},{"x":2009,"y":884},{"x":2010,"y":871},{"x":2011,"y":869},{"x":2012,"y":840},{"x":2013,"y":920},{"x":2014,"y":900}]}];
			
				var chart = nv.models.lineChart()
					.useInteractiveGuideline(true);
					
				var svg = d3.select('#LineChart0');
				
				var x_annotations = [];
				var y_annotations = [];
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
			
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				chart.dispatch.on('renderEnd.alignAnnotations', function () {
					
					
				});
				
				LineChart0_data = data;
				LineChart0_chart = chart;
				LineChart0_svg = svg;
				LineChart0_x_annotations = x_annotations;
				LineChart0_y_annotations = y_annotations;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var LineChart1_data;
			var LineChart1_chart;
			var LineChart1_svg;
			var LineChart1_x_annotations;
			var LineChart1_y_annotations;
			nv.addGraph(function() {
				var data = [{"key":"Male","values":[{"x":0,"y":10},{"x":1,"y":10},{"x":2,"y":17},{"x":3,"y":15},{"x":4,"y":5},{"x":5,"y":10},{"x":6,"y":16},{"x":7,"y":21},{"x":8,"y":27},{"x":9,"y":30},{"x":10,"y":34},{"x":11,"y":34},{"x":12,"y":59},{"x":13,"y":34},{"x":14,"y":32},{"x":15,"y":12},{"x":16,"y":9},{"x":17,"y":10}]},{"key":"Female","values":[{"x":0,"y":17},{"x":1,"y":18},{"x":2,"y":15},{"x":3,"y":17},{"x":4,"y":14},{"x":5,"y":11},{"x":6,"y":29},{"x":7,"y":24},{"x":8,"y":24},{"x":9,"y":30},{"x":10,"y":32},{"x":11,"y":39},{"x":12,"y":73},{"x":13,"y":44},{"x":14,"y":31},{"x":15,"y":11},{"x":16,"y":12},{"x":17,"y":11}]},{"key":"Total","color":"#000000","values":[{"x":0,"y":27},{"x":1,"y":28},{"x":2,"y":32},{"x":3,"y":32},{"x":4,"y":19},{"x":5,"y":21},{"x":6,"y":45},{"x":7,"y":45},{"x":8,"y":51},{"x":9,"y":60},{"x":10,"y":66},{"x":11,"y":73},{"x":12,"y":132},{"x":13,"y":78},{"x":14,"y":63},{"x":15,"y":23},{"x":16,"y":21},{"x":17,"y":21}]}];
			
				var chart = nv.models.lineChart()
					.useInteractiveGuideline(true);
					
				var svg = d3.select('#LineChart1');
				
				var x_annotations = [];
				var y_annotations = [];
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		chart.forceY(0);

					if (data.length > 2 && parseInt(svg.style('width')) < 768/2) {
						chart.showLegend(false);
					}
					
					var x_discreet_labels = ["Under 5","5-9","10-14","15-19","20-24","25-29","30-34","35-39","40-44","45-49","50-54","55-59","60-64","65-69","70-74","75-79","80-84","85 Plus"];

					chart.xAxis.tickFormat( function (d) {
						return x_discreet_labels[d];
					});
						
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				chart.dispatch.on('renderEnd.alignAnnotations', function () {
					
					
				});
				
				LineChart1_data = data;
				LineChart1_chart = chart;
				LineChart1_svg = svg;
				LineChart1_x_annotations = x_annotations;
				LineChart1_y_annotations = y_annotations;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var PieChart0_data;
			var PieChart0_chart;
			var PieChart0_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"Male","y":385},{"x":"Female","y":452}]}];
				
				var total = 0;
				data[0].values.forEach(function (d) {
					total = total + d.y;
				});
				
				var chart = nv.models.pieChart();
					
				var svg = d3.select('#PieChart0');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		
					chart.color(["#1f77b4","#aec7e8"]);
					chart.margin({top: 5, right: 5, bottom: 5, left: 5});

					chart.tooltip.valueFormatter(function (d) {
						return (d/total*100).toFixed() + ' %<br><span style="font-weight: normal; font-size: 75%">' + d3.format(',')(d) + ' of ' + d3.format(',')(total) + '</span>';
					});
					chart.showLabels(false);
	
				
				
				chart.growOnHover(false);
				
				if (!chart.labelsOutside()) {
					
					// the current nvd3 version makes the following adjustment even if growOnHover is turned off
					// need to undo it
					// the result is a pie chart that doesn't fill the entire container
					//d.outer = (d.outer - d.outer / 5)
					
					var arcs = chart.arcsRadius();
					var new_arcs = [];
					if (arcs.length === 0) {
						data[0].values.forEach(function (d) {
							new_arcs.push({ outer: 1.25, inner: 0 });
						});
					} else {
						arcs.forEach(function (d) {
							new_arcs.push({ outer: d.outer*1.25, inner: d.inner*1.25 });
						});
					}
					chart.arcsRadius(new_arcs);
				}
				
				
				// note that a pie chart uses a different data format
				svg.datum(data[0].values)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				PieChart0_data = data;
				PieChart0_chart = chart;
				PieChart0_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var PieChart1_data;
			var PieChart1_chart;
			var PieChart1_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"White","y":729},{"x":"Black Or African American","y":9},{"x":"American Indian Or Alaskan Native","y":2},{"x":"Asian","y":10},{"x":"Native Hawaiian & Other Pacific Islander","y":2},{"x":"Other Race","y":64},{"x":"Two Or More Races","y":21}]}];
				
				var total = 0;
				data[0].values.forEach(function (d) {
					total = total + d.y;
				});
				
				var chart = nv.models.pieChart();
					
				var svg = d3.select('#PieChart1');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		
					chart.color(["#1f77b4","#aec7e8","#ff7f0e","#ffbb78","#2ca02c","#98df8a","#d62728"]);
					chart.margin({top: 5, right: 5, bottom: 5, left: 5});

					chart.tooltip.valueFormatter(function (d) {
						return (d/total*100).toFixed() + ' %<br><span style="font-weight: normal; font-size: 75%">' + d3.format(',')(d) + ' of ' + d3.format(',')(total) + '</span>';
					});
					chart.showLabels(false);
	
				
				
				chart.growOnHover(false);
				
				if (!chart.labelsOutside()) {
					
					// the current nvd3 version makes the following adjustment even if growOnHover is turned off
					// need to undo it
					// the result is a pie chart that doesn't fill the entire container
					//d.outer = (d.outer - d.outer / 5)
					
					var arcs = chart.arcsRadius();
					var new_arcs = [];
					if (arcs.length === 0) {
						data[0].values.forEach(function (d) {
							new_arcs.push({ outer: 1.25, inner: 0 });
						});
					} else {
						arcs.forEach(function (d) {
							new_arcs.push({ outer: d.outer*1.25, inner: d.inner*1.25 });
						});
					}
					chart.arcsRadius(new_arcs);
				}
				
				
				// note that a pie chart uses a different data format
				svg.datum(data[0].values)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				PieChart1_data = data;
				PieChart1_chart = chart;
				PieChart1_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var LineChart2_data;
			var LineChart2_chart;
			var LineChart2_svg;
			var LineChart2_x_annotations;
			var LineChart2_y_annotations;
			nv.addGraph(function() {
				var data = [{"key":"Owner","values":[{"x":0,"y":1},{"x":1,"y":3},{"x":2,"y":11},{"x":3,"y":27},{"x":4,"y":72},{"x":5,"y":82},{"x":6,"y":27},{"x":7,"y":12}]},{"key":"Renter","values":[{"x":0,"y":1},{"x":1,"y":28},{"x":2,"y":37},{"x":3,"y":50},{"x":4,"y":53},{"x":5,"y":14},{"x":6,"y":4},{"x":7,"y":4}]},{"key":"Total","color":"#000000","values":[{"x":0,"y":2},{"x":1,"y":31},{"x":2,"y":48},{"x":3,"y":77},{"x":4,"y":125},{"x":5,"y":96},{"x":6,"y":31},{"x":7,"y":16}]}];
			
				var chart = nv.models.lineChart()
					.useInteractiveGuideline(true);
					
				var svg = d3.select('#LineChart2');
				
				var x_annotations = [];
				var y_annotations = [];
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		chart.forceY(0);

					if (data.length > 2 && parseInt(svg.style('width')) < 768/2) {
						chart.showLegend(false);
					}
					
					var x_discreet_labels = ["15-24","25-34","35-44","45-54","55-64","65-74","75-84","85 Plus"];

					chart.xAxis.tickFormat( function (d) {
						return x_discreet_labels[d];
					});
						
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				chart.dispatch.on('renderEnd.alignAnnotations', function () {
					
					
				});
				
				LineChart2_data = data;
				LineChart2_chart = chart;
				LineChart2_svg = svg;
				LineChart2_x_annotations = x_annotations;
				LineChart2_y_annotations = y_annotations;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var PieChart2_data;
			var PieChart2_chart;
			var PieChart2_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"Husband Wife Family Households","y":197},{"x":"Single Guardian","y":26},{"x":"Singles","y":165},{"x":"Singles With Roommate","y":38}]}];
				
				var total = 0;
				data[0].values.forEach(function (d) {
					total = total + d.y;
				});
				
				var chart = nv.models.pieChart();
					
				var svg = d3.select('#PieChart2');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		
					chart.color(["#1f77b4","#aec7e8","#ff7f0e","#ffbb78"]);
					chart.margin({top: 5, right: 5, bottom: 5, left: 5});

					chart.tooltip.valueFormatter(function (d) {
						return (d/total*100).toFixed() + ' %<br><span style="font-weight: normal; font-size: 75%">' + d3.format(',')(d) + ' of ' + d3.format(',')(total) + '</span>';
					});
					chart.showLabels(false);
	
				
				
				chart.growOnHover(false);
				
				if (!chart.labelsOutside()) {
					
					// the current nvd3 version makes the following adjustment even if growOnHover is turned off
					// need to undo it
					// the result is a pie chart that doesn't fill the entire container
					//d.outer = (d.outer - d.outer / 5)
					
					var arcs = chart.arcsRadius();
					var new_arcs = [];
					if (arcs.length === 0) {
						data[0].values.forEach(function (d) {
							new_arcs.push({ outer: 1.25, inner: 0 });
						});
					} else {
						arcs.forEach(function (d) {
							new_arcs.push({ outer: d.outer*1.25, inner: d.inner*1.25 });
						});
					}
					chart.arcsRadius(new_arcs);
				}
				
				
				// note that a pie chart uses a different data format
				svg.datum(data[0].values)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				PieChart2_data = data;
				PieChart2_chart = chart;
				PieChart2_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var PieChart3_data;
			var PieChart3_chart;
			var PieChart3_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"Households Without Kids","y":359},{"x":"Households With Kids","y":67}]}];
				
				var total = 0;
				data[0].values.forEach(function (d) {
					total = total + d.y;
				});
				
				var chart = nv.models.pieChart();
					
				var svg = d3.select('#PieChart3');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		
					chart.color(["#1f77b4","#aec7e8"]);
					chart.margin({top: 5, right: 5, bottom: 5, left: 5});

					chart.tooltip.valueFormatter(function (d) {
						return (d/total*100).toFixed() + ' %<br><span style="font-weight: normal; font-size: 75%">' + d3.format(',')(d) + ' of ' + d3.format(',')(total) + '</span>';
					});
					chart.showLabels(false);
	
				
				
				chart.growOnHover(false);
				
				if (!chart.labelsOutside()) {
					
					// the current nvd3 version makes the following adjustment even if growOnHover is turned off
					// need to undo it
					// the result is a pie chart that doesn't fill the entire container
					//d.outer = (d.outer - d.outer / 5)
					
					var arcs = chart.arcsRadius();
					var new_arcs = [];
					if (arcs.length === 0) {
						data[0].values.forEach(function (d) {
							new_arcs.push({ outer: 1.25, inner: 0 });
						});
					} else {
						arcs.forEach(function (d) {
							new_arcs.push({ outer: d.outer*1.25, inner: d.inner*1.25 });
						});
					}
					chart.arcsRadius(new_arcs);
				}
				
				
				// note that a pie chart uses a different data format
				svg.datum(data[0].values)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				PieChart3_data = data;
				PieChart3_chart = chart;
				PieChart3_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var LineChart3_data;
			var LineChart3_chart;
			var LineChart3_svg;
			var LineChart3_x_annotations;
			var LineChart3_y_annotations;
			nv.addGraph(function() {
				var data = [{"key":"Male","values":[{"x":0,"y":2},{"x":1,"y":2},{"x":2,"y":3},{"x":3,"y":2},{"x":4,"y":4},{"x":5,"y":2},{"x":6,"y":3},{"x":7,"y":1},{"x":8,"y":0},{"x":9,"y":2},{"x":10,"y":3},{"x":11,"y":5},{"x":12,"y":4},{"x":13,"y":3},{"x":14,"y":4},{"x":15,"y":1},{"x":16,"y":5},{"x":17,"y":2},{"x":18,"y":3},{"x":19,"y":1}]},{"key":"Female","values":[{"x":0,"y":3},{"x":1,"y":6},{"x":2,"y":3},{"x":3,"y":2},{"x":4,"y":4},{"x":5,"y":2},{"x":6,"y":4},{"x":7,"y":3},{"x":8,"y":5},{"x":9,"y":5},{"x":10,"y":2},{"x":11,"y":3},{"x":12,"y":2},{"x":13,"y":3},{"x":14,"y":3},{"x":15,"y":6},{"x":16,"y":5},{"x":17,"y":1},{"x":18,"y":2},{"x":19,"y":3}]},{"key":"Total","color":"#000000","values":[{"x":0,"y":5},{"x":1,"y":8},{"x":2,"y":6},{"x":3,"y":4},{"x":4,"y":8},{"x":5,"y":4},{"x":6,"y":7},{"x":7,"y":4},{"x":8,"y":5},{"x":9,"y":7},{"x":10,"y":5},{"x":11,"y":8},{"x":12,"y":6},{"x":13,"y":6},{"x":14,"y":7},{"x":15,"y":7},{"x":16,"y":10},{"x":17,"y":3},{"x":18,"y":5},{"x":19,"y":4}]}];
			
				var chart = nv.models.lineChart()
					.useInteractiveGuideline(true);
					
				var svg = d3.select('#LineChart3');
				
				var x_annotations = [];
				var y_annotations = [];
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		chart.forceY(0);

					if (data.length > 2 && parseInt(svg.style('width')) < 768/2) {
						chart.showLegend(false);
					}
					
					var x_discreet_labels = ["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20"];

					chart.xAxis.tickFormat( function (d) {
						return x_discreet_labels[d];
					});
						
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				chart.dispatch.on('renderEnd.alignAnnotations', function () {
					
					
				});
				
				LineChart3_data = data;
				LineChart3_chart = chart;
				LineChart3_svg = svg;
				LineChart3_x_annotations = x_annotations;
				LineChart3_y_annotations = y_annotations;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var PieChart4_data;
			var PieChart4_chart;
			var PieChart4_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"In Occupied Housing Units","y":837},{"x":"Correctional Facility For Adults","y":0},{"x":"Juvenile Facilities","y":0},{"x":"Nursing Facilities","y":0},{"x":"Other Institutional","y":0},{"x":"College Student Housing","y":0},{"x":"Military Quarters","y":0},{"x":"Other Noninstitutional","y":0}]}];
				
				var total = 0;
				data[0].values.forEach(function (d) {
					total = total + d.y;
				});
				
				var chart = nv.models.pieChart();
					
				var svg = d3.select('#PieChart4');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		
					chart.color(["#1f77b4","#aec7e8","#ff7f0e","#ffbb78","#2ca02c","#98df8a","#d62728","#ff9896"]);
					chart.margin({top: 5, right: 5, bottom: 5, left: 5});

					chart.tooltip.valueFormatter(function (d) {
						return (d/total*100).toFixed() + ' %<br><span style="font-weight: normal; font-size: 75%">' + d3.format(',')(d) + ' of ' + d3.format(',')(total) + '</span>';
					});
					chart.showLabels(false);
	
				
				
				chart.growOnHover(false);
				
				if (!chart.labelsOutside()) {
					
					// the current nvd3 version makes the following adjustment even if growOnHover is turned off
					// need to undo it
					// the result is a pie chart that doesn't fill the entire container
					//d.outer = (d.outer - d.outer / 5)
					
					var arcs = chart.arcsRadius();
					var new_arcs = [];
					if (arcs.length === 0) {
						data[0].values.forEach(function (d) {
							new_arcs.push({ outer: 1.25, inner: 0 });
						});
					} else {
						arcs.forEach(function (d) {
							new_arcs.push({ outer: d.outer*1.25, inner: d.inner*1.25 });
						});
					}
					chart.arcsRadius(new_arcs);
				}
				
				
				// note that a pie chart uses a different data format
				svg.datum(data[0].values)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				PieChart4_data = data;
				PieChart4_chart = chart;
				PieChart4_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart0_data;
			var BarChart0_chart;
			var BarChart0_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"1939 Or Earlier","y":111},{"x":"1940s","y":59},{"x":"1950s","y":110},{"x":"1960s","y":95},{"x":"1970s","y":238},{"x":"1980s","y":59},{"x":"1990s","y":61},{"x":"2000s","y":78},{"x":"2010 Or Later","y":0}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart0');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		chart.staggerLabels(true);
chart.margin().bottom += 15;
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart0_data = data;
				BarChart0_chart = chart;
				BarChart0_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var PieChart5_data;
			var PieChart5_chart;
			var PieChart5_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"Owned Households With A Mortgage","y":126},{"x":"Owned Households Free & Clear","y":109},{"x":"Renter Occupied Households","y":191},{"x":"Households Vacant","y":336}]}];
				
				var total = 0;
				data[0].values.forEach(function (d) {
					total = total + d.y;
				});
				
				var chart = nv.models.pieChart();
					
				var svg = d3.select('#PieChart5');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		
					chart.color(["#1f77b4","#aec7e8","#ff7f0e","#ffbb78"]);
					chart.margin({top: 5, right: 5, bottom: 5, left: 5});

					chart.tooltip.valueFormatter(function (d) {
						return (d/total*100).toFixed() + ' %<br><span style="font-weight: normal; font-size: 75%">' + d3.format(',')(d) + ' of ' + d3.format(',')(total) + '</span>';
					});
					chart.showLabels(false);
	
				
				
				chart.growOnHover(false);
				
				if (!chart.labelsOutside()) {
					
					// the current nvd3 version makes the following adjustment even if growOnHover is turned off
					// need to undo it
					// the result is a pie chart that doesn't fill the entire container
					//d.outer = (d.outer - d.outer / 5)
					
					var arcs = chart.arcsRadius();
					var new_arcs = [];
					if (arcs.length === 0) {
						data[0].values.forEach(function (d) {
							new_arcs.push({ outer: 1.25, inner: 0 });
						});
					} else {
						arcs.forEach(function (d) {
							new_arcs.push({ outer: d.outer*1.25, inner: d.inner*1.25 });
						});
					}
					chart.arcsRadius(new_arcs);
				}
				
				
				// note that a pie chart uses a different data format
				svg.datum(data[0].values)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				PieChart5_data = data;
				PieChart5_chart = chart;
				PieChart5_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var PieChart6_data;
			var PieChart6_chart;
			var PieChart6_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"For Rent","y":18},{"x":"Rented & Unoccupied","y":0},{"x":"For Sale Only","y":8},{"x":"Sold & Unoccupied","y":2},{"x":"For Season Recreational Or Occasional Use","y":289},{"x":"For Migrant Workers","y":7},{"x":"Vacant For Other Reasons","y":12}]}];
				
				var total = 0;
				data[0].values.forEach(function (d) {
					total = total + d.y;
				});
				
				var chart = nv.models.pieChart();
					
				var svg = d3.select('#PieChart6');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		
					chart.color(["#1f77b4","#aec7e8","#ff7f0e","#ffbb78","#2ca02c","#98df8a","#d62728"]);
					chart.margin({top: 5, right: 5, bottom: 5, left: 5});

					chart.tooltip.valueFormatter(function (d) {
						return (d/total*100).toFixed() + ' %<br><span style="font-weight: normal; font-size: 75%">' + d3.format(',')(d) + ' of ' + d3.format(',')(total) + '</span>';
					});
					chart.showLabels(false);
	
				
				
				chart.growOnHover(false);
				
				if (!chart.labelsOutside()) {
					
					// the current nvd3 version makes the following adjustment even if growOnHover is turned off
					// need to undo it
					// the result is a pie chart that doesn't fill the entire container
					//d.outer = (d.outer - d.outer / 5)
					
					var arcs = chart.arcsRadius();
					var new_arcs = [];
					if (arcs.length === 0) {
						data[0].values.forEach(function (d) {
							new_arcs.push({ outer: 1.25, inner: 0 });
						});
					} else {
						arcs.forEach(function (d) {
							new_arcs.push({ outer: d.outer*1.25, inner: d.inner*1.25 });
						});
					}
					chart.arcsRadius(new_arcs);
				}
				
				
				// note that a pie chart uses a different data format
				svg.datum(data[0].values)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				PieChart6_data = data;
				PieChart6_chart = chart;
				PieChart6_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart1_data;
			var BarChart1_chart;
			var BarChart1_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"$1-$24,999","y":6},{"x":"$25,000-$49,999","y":0},{"x":"$50,000-$99,999","y":16},{"x":"$100,000-$149,999","y":0},{"x":"$150,000-$199,999","y":4},{"x":"$200,000-$399,999","y":0},{"x":"$400,000-$749,999","y":44},{"x":"$750,000+","y":165}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart1');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		chart.staggerLabels(true);
chart.margin().bottom += 15;
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart1_data = data;
				BarChart1_chart = chart;
				BarChart1_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var PieChart7_data;
			var PieChart7_chart;
			var PieChart7_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"Studio Apartment","y":13},{"x":"1 Bedroom","y":59},{"x":"2 Bedroom","y":90},{"x":"3+ Bedroom","y":138}]}];
				
				var total = 0;
				data[0].values.forEach(function (d) {
					total = total + d.y;
				});
				
				var chart = nv.models.pieChart();
					
				var svg = d3.select('#PieChart7');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		
					chart.color(["#1f77b4","#aec7e8","#ff7f0e","#ffbb78"]);
					chart.margin({top: 5, right: 5, bottom: 5, left: 5});

					chart.tooltip.valueFormatter(function (d) {
						return (d/total*100).toFixed() + ' %<br><span style="font-weight: normal; font-size: 75%">' + d3.format(',')(d) + ' of ' + d3.format(',')(total) + '</span>';
					});
					chart.showLabels(false);
	
				
				
				chart.growOnHover(false);
				
				if (!chart.labelsOutside()) {
					
					// the current nvd3 version makes the following adjustment even if growOnHover is turned off
					// need to undo it
					// the result is a pie chart that doesn't fill the entire container
					//d.outer = (d.outer - d.outer / 5)
					
					var arcs = chart.arcsRadius();
					var new_arcs = [];
					if (arcs.length === 0) {
						data[0].values.forEach(function (d) {
							new_arcs.push({ outer: 1.25, inner: 0 });
						});
					} else {
						arcs.forEach(function (d) {
							new_arcs.push({ outer: d.outer*1.25, inner: d.inner*1.25 });
						});
					}
					chart.arcsRadius(new_arcs);
				}
				
				
				// note that a pie chart uses a different data format
				svg.datum(data[0].values)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				PieChart7_data = data;
				PieChart7_chart = chart;
				PieChart7_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart2_data;
			var BarChart2_chart;
			var BarChart2_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"< $200","y":0},{"x":"$200-$299","y":0},{"x":"$300-$499","y":0},{"x":"$500-$749","y":0},{"x":"$750-$999","y":0},{"x":"$1,000+","y":13}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart2');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		chart.staggerLabels(true);
chart.margin().bottom += 15;
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart2_data = data;
				BarChart2_chart = chart;
				BarChart2_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart3_data;
			var BarChart3_chart;
			var BarChart3_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"< $200","y":0},{"x":"$200-$299","y":0},{"x":"$300-$499","y":0},{"x":"$500-$749","y":14},{"x":"$750-$999","y":11},{"x":"$1,000+","y":14}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart3');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		chart.staggerLabels(true);
chart.margin().bottom += 15;
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart3_data = data;
				BarChart3_chart = chart;
				BarChart3_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart4_data;
			var BarChart4_chart;
			var BarChart4_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"< $200","y":0},{"x":"$200-$299","y":0},{"x":"$300-$499","y":0},{"x":"$500-$749","y":0},{"x":"$750-$999","y":0},{"x":"$1,000+","y":74}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart4');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		chart.staggerLabels(true);
chart.margin().bottom += 15;
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart4_data = data;
				BarChart4_chart = chart;
				BarChart4_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart5_data;
			var BarChart5_chart;
			var BarChart5_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"< $200","y":0},{"x":"$200-$299","y":0},{"x":"$300-$499","y":0},{"x":"$500-$749","y":0},{"x":"$750-$999","y":51},{"x":"$1,000+","y":84}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart5');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		chart.staggerLabels(true);
chart.margin().bottom += 15;
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart5_data = data;
				BarChart5_chart = chart;
				BarChart5_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var PieChart8_data;
			var PieChart8_chart;
			var PieChart8_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"Worked Full-time With Earnings","y":354},{"x":"Worked Part-time With Earnings","y":369},{"x":"No Earnings","y":307}]}];
				
				var total = 0;
				data[0].values.forEach(function (d) {
					total = total + d.y;
				});
				
				var chart = nv.models.pieChart();
					
				var svg = d3.select('#PieChart8');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		
					chart.color(["#1f77b4","#aec7e8","#ff7f0e"]);
					chart.margin({top: 5, right: 5, bottom: 5, left: 5});

					chart.tooltip.valueFormatter(function (d) {
						return (d/total*100).toFixed() + ' %<br><span style="font-weight: normal; font-size: 75%">' + d3.format(',')(d) + ' of ' + d3.format(',')(total) + '</span>';
					});
					chart.showLabels(false);
	
				
				
				chart.growOnHover(false);
				
				if (!chart.labelsOutside()) {
					
					// the current nvd3 version makes the following adjustment even if growOnHover is turned off
					// need to undo it
					// the result is a pie chart that doesn't fill the entire container
					//d.outer = (d.outer - d.outer / 5)
					
					var arcs = chart.arcsRadius();
					var new_arcs = [];
					if (arcs.length === 0) {
						data[0].values.forEach(function (d) {
							new_arcs.push({ outer: 1.25, inner: 0 });
						});
					} else {
						arcs.forEach(function (d) {
							new_arcs.push({ outer: d.outer*1.25, inner: d.inner*1.25 });
						});
					}
					chart.arcsRadius(new_arcs);
				}
				
				
				// note that a pie chart uses a different data format
				svg.datum(data[0].values)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				PieChart8_data = data;
				PieChart8_chart = chart;
				PieChart8_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var LineChart4_data;
			var LineChart4_chart;
			var LineChart4_svg;
			var LineChart4_x_annotations;
			var LineChart4_y_annotations;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":2005,"y":102239.2157},{"x":2006,"y":103545.8015},{"x":2007,"y":97183.1974},{"x":2008,"y":79439.8087},{"x":2009,"y":81855.3971},{"x":2010,"y":85346.3115},{"x":2011,"y":93676.7068},{"x":2012,"y":104912.5},{"x":2013,"y":108273.5849},{"x":2014,"y":108966.0377}]}];
			
				var chart = nv.models.lineChart()
					.useInteractiveGuideline(true);
					
				var svg = d3.select('#LineChart4');
				
				var x_annotations = [];
				var y_annotations = [];
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
					chart.margin().left += 10;
				chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format('$,.0f')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format('$,.0f')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format('$,.0f'));
			}
		
			if (typeof chart.yAxis != 'undefined') {
				chart.yAxis.tickFormat(function(d){
					return d3.format('$,.0f')(d);
				});
			}
			chart.forceY(0);
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				chart.dispatch.on('renderEnd.alignAnnotations', function () {
					
					
				});
				
				LineChart4_data = data;
				LineChart4_chart = chart;
				LineChart4_svg = svg;
				LineChart4_x_annotations = x_annotations;
				LineChart4_y_annotations = y_annotations;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart6_data;
			var BarChart6_chart;
			var BarChart6_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"< $25,000","y":76},{"x":"$25,000-$44,999","y":133},{"x":"$45,000-$59,999","y":122},{"x":"$60,000-$99,999","y":46},{"x":"$100,000-$149,999","y":55},{"x":"$150,000-$199,999","y":26},{"x":"$200,000+","y":77}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart6');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		chart.staggerLabels(true);
chart.margin().bottom += 15;
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart6_data = data;
				BarChart6_chart = chart;
				BarChart6_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart7_data;
			var BarChart7_chart;
			var BarChart7_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"< $10,000","y":180},{"x":"$10,000-$19,999","y":68},{"x":"$20,000-$29,999","y":150},{"x":"$30,000-$39,999","y":59},{"x":"$40,000-$49,999","y":62},{"x":"$50,000-$64,999","y":26},{"x":"$65,000-$74,999","y":28},{"x":"$75,000-$99,999","y":47},{"x":"$100,000+","y":103}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart7');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		chart.staggerLabels(true);
chart.margin().bottom += 15;
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart7_data = data;
				BarChart7_chart = chart;
				BarChart7_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart8_data;
			var BarChart8_chart;
			var BarChart8_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"Wages","y":58.4906},{"x":"Business","y":33.9623},{"x":"Partnership","y":11.3208},{"x":"Unemployment","y":0}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart8');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
					chart.margin().left += 10;
				
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',.0f')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',.0f')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(',.0f'));
			}
		
			if (typeof chart.yAxis != 'undefined') {
				chart.yAxis.tickFormat(function(d){
					return d3.format(',.0f')(d) + '%';
				});
			}
			chart.staggerLabels(true);
chart.margin().bottom += 15;
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart8_data = data;
				BarChart8_chart = chart;
				BarChart8_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart9_data;
			var BarChart9_chart;
			var BarChart9_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"Wages","y":54764.5161},{"x":"Business","y":24011.1111},{"x":"Partnership","y":105616.6667},{"x":"Unemployment","y":0}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart9');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
					chart.margin().left += 10;
				
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format('$,.0f')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format('$,.0f')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format('$,.0f'));
			}
		
			if (typeof chart.yAxis != 'undefined') {
				chart.yAxis.tickFormat(function(d){
					return d3.format('$,.0f')(d);
				});
			}
			chart.staggerLabels(true);
chart.margin().bottom += 15;
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart9_data = data;
				BarChart9_chart = chart;
				BarChart9_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart10_data;
			var BarChart10_chart;
			var BarChart10_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"Interest","y":50.9434},{"x":"Ordinary Dividends","y":43.3962},{"x":"Qualified Dividends","y":41.5094},{"x":"Capital Gains","y":41.5094}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart10');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
					chart.margin().left += 10;
				
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',.0f')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',.0f')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(',.0f'));
			}
		
			if (typeof chart.yAxis != 'undefined') {
				chart.yAxis.tickFormat(function(d){
					return d3.format(',.0f')(d) + '%';
				});
			}
			chart.staggerLabels(true);
chart.margin().bottom += 15;
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart10_data = data;
				BarChart10_chart = chart;
				BarChart10_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart11_data;
			var BarChart11_chart;
			var BarChart11_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"Interest","y":2777.7778},{"x":"Ordinary Dividends","y":19734.7826},{"x":"Qualified Dividends","y":15690.9091},{"x":"Capital Gains","y":28554.5455}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart11');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
					chart.margin().left += 10;
				
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format('$,.0f')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format('$,.0f')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format('$,.0f'));
			}
		
			if (typeof chart.yAxis != 'undefined') {
				chart.yAxis.tickFormat(function(d){
					return d3.format('$,.0f')(d);
				});
			}
			chart.staggerLabels(true);
chart.margin().bottom += 15;
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart11_data = data;
				BarChart11_chart = chart;
				BarChart11_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart12_data;
			var BarChart12_chart;
			var BarChart12_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"IRA Distributions","y":18.8679},{"x":"Pensions\/annuities","y":22.6415},{"x":"Social Security","y":30.1887}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart12');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
					chart.margin().left += 10;
				
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',.0f')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',.0f')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(',.0f'));
			}
		
			if (typeof chart.yAxis != 'undefined') {
				chart.yAxis.tickFormat(function(d){
					return d3.format(',.0f')(d) + '%';
				});
			}
			chart.staggerLabels(true);
chart.margin().bottom += 15;
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart12_data = data;
				BarChart12_chart = chart;
				BarChart12_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart13_data;
			var BarChart13_chart;
			var BarChart13_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"IRA Distributions","y":29480},{"x":"Pensions\/annuities","y":38608.3333},{"x":"Social Security","y":17193.75}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart13');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
					chart.margin().left += 10;
				
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format('$,.0f')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format('$,.0f')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format('$,.0f'));
			}
		
			if (typeof chart.yAxis != 'undefined') {
				chart.yAxis.tickFormat(function(d){
					return d3.format('$,.0f')(d);
				});
			}
			chart.staggerLabels(true);
chart.margin().bottom += 15;
	
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart13_data = data;
				BarChart13_chart = chart;
				BarChart13_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var PieChart9_data;
			var PieChart9_chart;
			var PieChart9_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"Worked Full-time With Earnings","y":354},{"x":"Worked Part-time With Earnings","y":369},{"x":"No Earnings","y":307}]}];
				
				var total = 0;
				data[0].values.forEach(function (d) {
					total = total + d.y;
				});
				
				var chart = nv.models.pieChart();
					
				var svg = d3.select('#PieChart9');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		
					chart.color(["#1f77b4","#aec7e8","#ff7f0e"]);
					chart.margin({top: 5, right: 5, bottom: 5, left: 5});

					chart.tooltip.valueFormatter(function (d) {
						return (d/total*100).toFixed() + ' %<br><span style="font-weight: normal; font-size: 75%">' + d3.format(',')(d) + ' of ' + d3.format(',')(total) + '</span>';
					});
					chart.showLabels(false);
	
				
				
				chart.growOnHover(false);
				
				if (!chart.labelsOutside()) {
					
					// the current nvd3 version makes the following adjustment even if growOnHover is turned off
					// need to undo it
					// the result is a pie chart that doesn't fill the entire container
					//d.outer = (d.outer - d.outer / 5)
					
					var arcs = chart.arcsRadius();
					var new_arcs = [];
					if (arcs.length === 0) {
						data[0].values.forEach(function (d) {
							new_arcs.push({ outer: 1.25, inner: 0 });
						});
					} else {
						arcs.forEach(function (d) {
							new_arcs.push({ outer: d.outer*1.25, inner: d.inner*1.25 });
						});
					}
					chart.arcsRadius(new_arcs);
				}
				
				
				// note that a pie chart uses a different data format
				svg.datum(data[0].values)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				PieChart9_data = data;
				PieChart9_chart = chart;
				PieChart9_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var PieChart10_data;
			var PieChart10_chart;
			var PieChart10_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"Car, Truck, Or Van","y":401},{"x":"Public Transportation","y":0},{"x":"Taxicab","y":0},{"x":"Motorcycle","y":0},{"x":"Bicycle, Walked, Or Other Means","y":88},{"x":"Worked At Home","y":139}]}];
				
				var total = 0;
				data[0].values.forEach(function (d) {
					total = total + d.y;
				});
				
				var chart = nv.models.pieChart();
					
				var svg = d3.select('#PieChart10');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		
					chart.color(["#1f77b4","#aec7e8","#ff7f0e","#ffbb78","#2ca02c","#98df8a"]);
					chart.margin({top: 5, right: 5, bottom: 5, left: 5});

					chart.tooltip.valueFormatter(function (d) {
						return (d/total*100).toFixed() + ' %<br><span style="font-weight: normal; font-size: 75%">' + d3.format(',')(d) + ' of ' + d3.format(',')(total) + '</span>';
					});
					chart.showLabels(false);
	
				
				
				chart.growOnHover(false);
				
				if (!chart.labelsOutside()) {
					
					// the current nvd3 version makes the following adjustment even if growOnHover is turned off
					// need to undo it
					// the result is a pie chart that doesn't fill the entire container
					//d.outer = (d.outer - d.outer / 5)
					
					var arcs = chart.arcsRadius();
					var new_arcs = [];
					if (arcs.length === 0) {
						data[0].values.forEach(function (d) {
							new_arcs.push({ outer: 1.25, inner: 0 });
						});
					} else {
						arcs.forEach(function (d) {
							new_arcs.push({ outer: d.outer*1.25, inner: d.inner*1.25 });
						});
					}
					chart.arcsRadius(new_arcs);
				}
				
				
				// note that a pie chart uses a different data format
				svg.datum(data[0].values)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				PieChart10_data = data;
				PieChart10_chart = chart;
				PieChart10_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var BarChart14_data;
			var BarChart14_chart;
			var BarChart14_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"< 10","y":158},{"x":"10-19","y":149},{"x":"20-29","y":67},{"x":"30-39","y":4},{"x":"40-44","y":0},{"x":"45-59","y":23},{"x":"60-89","y":60},{"x":"90+","y":28}]}];
				
				var chart = nv.models.discreteBarChart();
					
				var svg = d3.select('#BarChart14');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						
				if (typeof chart.legend != 'undefined') {
					chart.legend.vers('furious');
				}
				
			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		
					if (parseInt(svg.style('width')) < 768/2) {
						chart.staggerLabels(true);
						chart.margin().bottom += 15;
					}
						
				
				svg.datum(data)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update() });
				
				BarChart14_data = data;
				BarChart14_chart = chart;
				BarChart14_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var PieChart11_data;
			var PieChart11_chart;
			var PieChart11_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"Less Than High School Diploma","y":41},{"x":"High School Graduate","y":163},{"x":"Associate's Degree","y":17},{"x":"Bachelor's Degree","y":53},{"x":"Master's Degree","y":11},{"x":"Professional School Degree","y":54},{"x":"Doctorate Degree","y":18}]}];
				
				var total = 0;
				data[0].values.forEach(function (d) {
					total = total + d.y;
				});
				
				var chart = nv.models.pieChart();
					
				var svg = d3.select('#PieChart11');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		
					chart.color(["#1f77b4","#aec7e8","#ff7f0e","#ffbb78","#2ca02c","#98df8a","#d62728"]);
					chart.margin({top: 5, right: 5, bottom: 5, left: 5});

					chart.tooltip.valueFormatter(function (d) {
						return (d/total*100).toFixed() + ' %<br><span style="font-weight: normal; font-size: 75%">' + d3.format(',')(d) + ' of ' + d3.format(',')(total) + '</span>';
					});
					chart.showLabels(false);
	
				
				
				chart.growOnHover(false);
				
				if (!chart.labelsOutside()) {
					
					// the current nvd3 version makes the following adjustment even if growOnHover is turned off
					// need to undo it
					// the result is a pie chart that doesn't fill the entire container
					//d.outer = (d.outer - d.outer / 5)
					
					var arcs = chart.arcsRadius();
					var new_arcs = [];
					if (arcs.length === 0) {
						data[0].values.forEach(function (d) {
							new_arcs.push({ outer: 1.25, inner: 0 });
						});
					} else {
						arcs.forEach(function (d) {
							new_arcs.push({ outer: d.outer*1.25, inner: d.inner*1.25 });
						});
					}
					chart.arcsRadius(new_arcs);
				}
				
				
				// note that a pie chart uses a different data format
				svg.datum(data[0].values)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				PieChart11_data = data;
				PieChart11_chart = chart;
				PieChart11_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script>
<script>
			var PieChart12_data;
			var PieChart12_chart;
			var PieChart12_svg;
			nv.addGraph(function() {
				var data = [{"key":"Data","values":[{"x":"Enrolled In Public School","y":99},{"x":"Enrolled In Private School","y":0},{"x":"Not Enrolled In School","y":0}]}];
				
				var total = 0;
				data[0].values.forEach(function (d) {
					total = total + d.y;
				});
				
				var chart = nv.models.pieChart();
					
				var svg = d3.select('#PieChart12');
					
				
				chart.margin({ top: 30, right: 20, bottom: 20, left: 50 })
				if (typeof chart.legend != 'undefined') chart.legend.margin().right -= 30;
				
						if (typeof chart.yScale != 'undefined') {
							chart.margin().left -= 3*8;
						}
						chart.showLegend(false);

			var y_window_formats = 0;
			nv.utils.windowResize(function() {
				y_window_formats = 0;
			});
			if (typeof chart.dispatch.stateChange != 'undefined') {
				// some charts (including bar charts) don't have state changes
				chart.dispatch.on('stateChange.y_window_formats', function () {
					y_window_formats = 0;
				});
			}
			if (typeof chart.yAxis != 'undefined') {	
				// some charts (including pie charts) don't have a y axis
				chart.yAxis.tickFormat(function (d) {
					if (chart.yScale().domain()[1] < 10) {
						return d3.format(',')(d);
					} else {
						// tooltip via https://github.com/novus/nvd3/issues/428
						if (this === window) {
							if (y_window_formats >= 2) {
								return d3.format(',')(d);
							}
							y_window_formats++;
						}
					
						// axis
						return d3.format(',.0f')(d);;
					}
				});
			}
			if (typeof chart.valueFormat == 'function') {
				// over bar
				chart.valueFormat(d3.format(','));
			}
		
					chart.color(["#1f77b4","#aec7e8","#ff7f0e"]);
					chart.margin({top: 5, right: 5, bottom: 5, left: 5});

					chart.tooltip.valueFormatter(function (d) {
						return (d/total*100).toFixed() + ' %<br><span style="font-weight: normal; font-size: 75%">' + d3.format(',')(d) + ' of ' + d3.format(',')(total) + '</span>';
					});
					chart.showLabels(false);
	
				
				
				chart.growOnHover(false);
				
				if (!chart.labelsOutside()) {
					
					// the current nvd3 version makes the following adjustment even if growOnHover is turned off
					// need to undo it
					// the result is a pie chart that doesn't fill the entire container
					//d.outer = (d.outer - d.outer / 5)
					
					var arcs = chart.arcsRadius();
					var new_arcs = [];
					if (arcs.length === 0) {
						data[0].values.forEach(function (d) {
							new_arcs.push({ outer: 1.25, inner: 0 });
						});
					} else {
						arcs.forEach(function (d) {
							new_arcs.push({ outer: d.outer*1.25, inner: d.inner*1.25 });
						});
					}
					chart.arcsRadius(new_arcs);
				}
				
				
				// note that a pie chart uses a different data format
				svg.datum(data[0].values)
					.call(chart);
					
				nv.utils.windowResize(function() { chart.update(); });
				
				PieChart12_data = data;
				PieChart12_chart = chart;
				PieChart12_svg = svg;
					
				return chart;
			}, function() { 
				
			});
		</script></body>
</html>
